[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Building bookstore-example-with-mvc 1.0
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ bookstore-example-with-mvc ---
[INFO] Deleting C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ bookstore-example-with-mvc ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 315 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.0:compile (default-compile) @ bookstore-example-with-mvc ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\classes
[INFO] /C:/Users/c.vazquezlos/Documents/GitHub/LOGANALYZER-SpringLogsGenerator/src/main/java/com/example/bookstore/web/view/OrderExcelView.java: C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\src\main\java\com\example\bookstore\web\view\OrderExcelView.java uses or overrides a deprecated API.
[INFO] /C:/Users/c.vazquezlos/Documents/GitHub/LOGANALYZER-SpringLogsGenerator/src/main/java/com/example/bookstore/web/view/OrderExcelView.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ bookstore-example-with-mvc ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.0:testCompile (default-testCompile) @ bookstore-example-with-mvc ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 4 source files to C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ bookstore-example-with-mvc ---
[INFO] Surefire report directory: C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.example.bookstore.basic.BasicUnitTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.089 sec
Running com.example.bookstore.repository.JpaBookRepositoryTest
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@544fe44c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@31610302, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71318ec4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@21213b92, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a67c67e]
[main] INFO org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@551aa95a: startup date [Sat Nov 11 11:00:53 CET 2017]; root of context hierarchy
[main] INFO org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader - Skipping bean definition for [BeanMethod:name=accountRepository,declaringClass=com.example.bookstore.service.AccountServiceTest$AccountServiceTestContextConfiguration]: a definition for bean 'accountRepository' already exists. This top-level bean definition is considered as an override.
[main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory - Creating embedded database 'testdb'
[main] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'bookstore'
2017-11-11 11:00:54.440 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.<clinit>(Ejb3Configuration.java:142)ogger{36} - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-11-11 11:00:54.484 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.484 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.485 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.486 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73d983ea
2017-11-11 11:00:54.488 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35645047
2017-11-11 11:00:54.489 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration yes_no -> org.hibernate.type.YesNoType@291f18
2017-11-11 11:00:54.491 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.492 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.492 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.493 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration character -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.494 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration char -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.494 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.497 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.497 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.498 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.500 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration integer -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.501 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration int -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.501 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.503 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.503 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.504 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.506 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.506 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.507 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.508 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.509 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.510 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.512 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2796aeae
2017-11-11 11:00:54.513 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2796aeae
2017-11-11 11:00:54.514 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51fadaff
2017-11-11 11:00:54.515 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51fadaff
2017-11-11 11:00:54.516 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration string -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:54.517 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.String -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:54.518 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration url -> org.hibernate.type.UrlType@7a67e3c6
2017-11-11 11:00:54.518 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a67e3c6
2017-11-11 11:00:54.521 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration date -> org.hibernate.type.DateType@60129b9a
2017-11-11 11:00:54.521 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60129b9a
2017-11-11 11:00:54.523 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration time -> org.hibernate.type.TimeType@8576fa0
2017-11-11 11:00:54.524 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@8576fa0
2017-11-11 11:00:54.526 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration timestamp -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.526 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.527 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.529 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc32e4f
2017-11-11 11:00:54.531 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration calendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.531 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.532 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.533 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1046d517
2017-11-11 11:00:54.534 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration locale -> org.hibernate.type.LocaleType@21337f7b
2017-11-11 11:00:54.534 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@21337f7b
2017-11-11 11:00:54.536 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration currency -> org.hibernate.type.CurrencyType@14fc1f0
2017-11-11 11:00:54.536 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14fc1f0
2017-11-11 11:00:54.538 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1800a575
2017-11-11 11:00:54.538 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1800a575
2017-11-11 11:00:54.539 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration class -> org.hibernate.type.ClassType@5ddf0d24
2017-11-11 11:00:54.540 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ddf0d24
2017-11-11 11:00:54.542 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61fe30
2017-11-11 11:00:54.542 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61fe30
2017-11-11 11:00:54.543 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3adcc812
2017-11-11 11:00:54.544 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3d9978
2017-11-11 11:00:54.546 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration binary -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.546 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.547 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [B -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration image -> org.hibernate.type.ImageType@332796d3
2017-11-11 11:00:54.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration characters -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration char[] -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [C -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration text -> org.hibernate.type.TextType@32c4e8b2
2017-11-11 11:00:54.564 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration blob -> org.hibernate.type.BlobType@2bd08376
2017-11-11 11:00:54.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2bd08376
2017-11-11 11:00:54.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64a40280
2017-11-11 11:00:54.569 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration clob -> org.hibernate.type.ClobType@539d019
2017-11-11 11:00:54.570 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@539d019
2017-11-11 11:00:54.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8c3619e
2017-11-11 11:00:54.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf8fa12
2017-11-11 11:00:54.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration object -> org.hibernate.type.ObjectType@52c3cb31
2017-11-11 11:00:54.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52c3cb31
2017-11-11 11:00:54.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6dab9b6d
2017-11-11 11:00:54.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21fd5faa
2017-11-11 11:00:54.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2766ca9d
2017-11-11 11:00:54.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5460cf3a
2017-11-11 11:00:54.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65a15628
2017-11-11 11:00:54.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e6a5539
2017-11-11 11:00:54.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3fc9504b
2017-11-11 11:00:54.580 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d025197
2017-11-11 11:00:54.612 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37)ogger{36} - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2017-11-11 11:00:54.619 [main] INFO  org.hibernate.Version.logVersion(Version.java:41)ogger{36} - HHH000412: Hibernate Core {4.1.9.Final}
2017-11-11 11:00:54.621 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239)ogger{36} - HHH000206: hibernate.properties not found
2017-11-11 11:00:54.623 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342)ogger{36} - HHH000021: Bytecode provider name : javassist
2017-11-11 11:00:54.637 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-11-11 11:00:54.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-11-11 11:00:54.639 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-11-11 11:00:54.640 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-11-11 11:00:54.642 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-11-11 11:00:54.642 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-11-11 11:00:54.644 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-11-11 11:00:54.646 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-11-11 11:00:54.647 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-11-11 11:00:54.648 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-11-11 11:00:54.649 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-11-11 11:00:54.652 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-11-11 11:00:54.653 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-11-11 11:00:54.655 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-11-11 11:00:54.656 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-11-11 11:00:54.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50de186c
2017-11-11 11:00:54.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73d983ea
2017-11-11 11:00:54.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35645047
2017-11-11 11:00:54.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration yes_no -> org.hibernate.type.YesNoType@291f18
2017-11-11 11:00:54.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671115f
2017-11-11 11:00:54.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration character -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration char -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36060e
2017-11-11 11:00:54.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12d2ce03
2017-11-11 11:00:54.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration integer -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration int -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ff8d125
2017-11-11 11:00:54.665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:54.666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68df9280
2017-11-11 11:00:54.667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a220c9a
2017-11-11 11:00:54.668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2796aeae
2017-11-11 11:00:54.668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2796aeae
2017-11-11 11:00:54.668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51fadaff
2017-11-11 11:00:54.669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51fadaff
2017-11-11 11:00:54.669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration string -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:54.669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.String -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:54.669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration url -> org.hibernate.type.UrlType@7a67e3c6
2017-11-11 11:00:54.670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a67e3c6
2017-11-11 11:00:54.670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration date -> org.hibernate.type.DateType@60129b9a
2017-11-11 11:00:54.670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60129b9a
2017-11-11 11:00:54.670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration time -> org.hibernate.type.TimeType@8576fa0
2017-11-11 11:00:54.671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@8576fa0
2017-11-11 11:00:54.671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration timestamp -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@74589991
2017-11-11 11:00:54.672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc32e4f
2017-11-11 11:00:54.672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration calendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7efaad5a
2017-11-11 11:00:54.673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1046d517
2017-11-11 11:00:54.673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration locale -> org.hibernate.type.LocaleType@21337f7b
2017-11-11 11:00:54.673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@21337f7b
2017-11-11 11:00:54.673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration currency -> org.hibernate.type.CurrencyType@14fc1f0
2017-11-11 11:00:54.674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14fc1f0
2017-11-11 11:00:54.674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1800a575
2017-11-11 11:00:54.674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1800a575
2017-11-11 11:00:54.675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration class -> org.hibernate.type.ClassType@5ddf0d24
2017-11-11 11:00:54.675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ddf0d24
2017-11-11 11:00:54.675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61fe30
2017-11-11 11:00:54.676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61fe30
2017-11-11 11:00:54.676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3adcc812
2017-11-11 11:00:54.676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3d9978
2017-11-11 11:00:54.676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration binary -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.677 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.677 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [B -> org.hibernate.type.BinaryType@1e461e41
2017-11-11 11:00:54.678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9ebe38b
2017-11-11 11:00:54.679 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration image -> org.hibernate.type.ImageType@332796d3
2017-11-11 11:00:54.679 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration characters -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.679 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration char[] -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.680 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [C -> org.hibernate.type.CharArrayType@5bf0fe62
2017-11-11 11:00:54.680 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.680 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.681 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ce86ce1
2017-11-11 11:00:54.681 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration text -> org.hibernate.type.TextType@32c4e8b2
2017-11-11 11:00:54.682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration blob -> org.hibernate.type.BlobType@2bd08376
2017-11-11 11:00:54.683 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2bd08376
2017-11-11 11:00:54.683 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64a40280
2017-11-11 11:00:54.683 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration clob -> org.hibernate.type.ClobType@539d019
2017-11-11 11:00:54.684 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@539d019
2017-11-11 11:00:54.684 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8c3619e
2017-11-11 11:00:54.684 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf8fa12
2017-11-11 11:00:54.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration object -> org.hibernate.type.ObjectType@52c3cb31
2017-11-11 11:00:54.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52c3cb31
2017-11-11 11:00:54.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e8df99a
2017-11-11 11:00:54.686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dc995f4
2017-11-11 11:00:54.686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f40e5db
2017-11-11 11:00:54.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@517566b
2017-11-11 11:00:54.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64b73e7a
2017-11-11 11:00:54.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@530712d
2017-11-11 11:00:54.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2df6226d
2017-11-11 11:00:54.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143)ogger{36} - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12ed9db6
2017-11-11 11:00:54.688 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-11-11 11:00:54.689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-11-11 11:00:54.689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-11-11 11:00:54.689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-11-11 11:00:54.690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-11-11 11:00:54.690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-11-11 11:00:54.690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-11-11 11:00:54.691 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-11-11 11:00:54.691 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-11-11 11:00:54.691 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-11-11 11:00:54.692 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-11-11 11:00:54.692 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-11-11 11:00:54.692 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-11-11 11:00:54.693 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-11-11 11:00:54.693 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93)ogger{36} - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-11-11 11:00:54.696 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526)ogger{36} - Processing PersistenceUnitInfo [
	name: bookstore
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: sun.misc.Launcher$AppClassLoader@6bc7c054
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2b4c1d96
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@45fd9a4d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/c.vazquezlos/Documents/GitHub/LOGANALYZER-SpringLogsGenerator/target/classes
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.cache.use_second_level_cache: true
		hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
		hibernate.cache.use_query_cache: true
		hibernate.hbm2ddl.auto: update]
2017-11-11 11:00:54.699 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:842)ogger{36} - Detect class: true; detect hbm: true
2017-11-11 11:00:54.699 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:842)ogger{36} - Detect class: true; detect hbm: true
2017-11-11 11:00:54.708 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:126)ogger{36} - Searching mapped entities in jar/par: file:/C:/Users/c.vazquezlos/Documents/GitHub/LOGANALYZER-SpringLogsGenerator/target/classes
2017-11-11 11:00:54.710 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.config.InfrastructureContextConfiguration
2017-11-11 11:00:54.789 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.config.TestDataContextConfiguration
2017-11-11 11:00:54.791 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.converter.StringToEntityConverter
2017-11-11 11:00:54.793 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.dao.DummyDao
2017-11-11 11:00:54.794 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Account
2017-11-11 11:00:54.795 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Account
2017-11-11 11:00:54.796 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Address
2017-11-11 11:00:54.797 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Address
2017-11-11 11:00:54.798 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Book
2017-11-11 11:00:54.799 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Book
2017-11-11 11:00:54.799 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.BookSearchCriteria
2017-11-11 11:00:54.800 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Cart
2017-11-11 11:00:54.801 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Category
2017-11-11 11:00:54.802 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Category
2017-11-11 11:00:54.802 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Order
2017-11-11 11:00:54.803 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Order
2017-11-11 11:00:54.804 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.OrderDetail
2017-11-11 11:00:54.804 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.OrderDetail
2017-11-11 11:00:54.805 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Permission
2017-11-11 11:00:54.806 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Permission
2017-11-11 11:00:54.806 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.Role
2017-11-11 11:00:54.807 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.executeJavaElementFilter(AbstractJarVisitor.java:223)ogger{36} - Java element filter matched for com.example.bookstore.domain.Role
2017-11-11 11:00:54.808 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.AccountBuilder
2017-11-11 11:00:54.809 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.BookBuilder
2017-11-11 11:00:54.810 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.CategoryBuilder
2017-11-11 11:00:54.811 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.EntityBuilder$EntityBuilderManager
2017-11-11 11:00:54.812 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.EntityBuilder
2017-11-11 11:00:54.813 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$1
2017-11-11 11:00:54.814 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$10
2017-11-11 11:00:54.815 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$11
2017-11-11 11:00:54.816 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$12
2017-11-11 11:00:54.817 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$13
2017-11-11 11:00:54.818 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$14
2017-11-11 11:00:54.819 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$15
2017-11-11 11:00:54.820 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$2
2017-11-11 11:00:54.821 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$3
2017-11-11 11:00:54.822 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$4
2017-11-11 11:00:54.823 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$5
2017-11-11 11:00:54.824 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$6
2017-11-11 11:00:54.825 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$7
2017-11-11 11:00:54.826 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$8
2017-11-11 11:00:54.827 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1$9
2017-11-11 11:00:54.828 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup$1
2017-11-11 11:00:54.830 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.InitialDataSetup
2017-11-11 11:00:54.831 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.domain.support.OrderBuilder
2017-11-11 11:00:54.832 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.formatter.DateFormat
2017-11-11 11:00:54.833 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.formatter.DateFormatAnnotationFormatterFactory
2017-11-11 11:00:54.834 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.formatter.DateFormatter
2017-11-11 11:00:54.835 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.AccountRepository
2017-11-11 11:00:54.836 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.BookRepository
2017-11-11 11:00:54.836 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.CategoryRepository
2017-11-11 11:00:54.837 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.JpaAccountRepository
2017-11-11 11:00:54.838 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.JpaBookRepository
2017-11-11 11:00:54.839 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.JpaCategoryRepository
2017-11-11 11:00:54.840 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.JpaOrderRepository
2017-11-11 11:00:54.841 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.repository.OrderRepository
2017-11-11 11:00:54.842 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.AccountService
2017-11-11 11:00:54.843 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.AccountServiceImpl
2017-11-11 11:00:54.844 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.AuthenticationException
2017-11-11 11:00:54.845 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.BookstoreService
2017-11-11 11:00:54.846 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.BookstoreServiceImpl
2017-11-11 11:00:54.846 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.CategoryService
2017-11-11 11:00:54.847 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.service.CategoryServiceImpl
2017-11-11 11:00:54.848 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.validation.AccountValidator
2017-11-11 11:00:54.849 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.validation.OrderValidator
2017-11-11 11:00:54.850 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.BookstoreWebApplicationInitializer
2017-11-11 11:00:54.851 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.config.ViewConfiguration
2017-11-11 11:00:54.852 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.config.WebMvcContextConfiguration
2017-11-11 11:00:54.853 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.AccountController
2017-11-11 11:00:54.855 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.BookDetailController
2017-11-11 11:00:54.855 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.BookSearchController
2017-11-11 11:00:54.856 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.CartController
2017-11-11 11:00:54.857 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.CheckoutController
2017-11-11 11:00:54.858 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.LoginController
2017-11-11 11:00:54.859 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.LogoutController
2017-11-11 11:00:54.860 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.OrderController
2017-11-11 11:00:54.861 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.controller.RegistrationController
2017-11-11 11:00:54.863 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.interceptor.CommonDataInterceptor
2017-11-11 11:00:54.864 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.interceptor.SecurityHandlerInterceptor
2017-11-11 11:00:54.866 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.method.support.SessionAttribute
2017-11-11 11:00:54.867 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.method.support.SessionAttributeProcessor
2017-11-11 11:00:54.868 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.servlet.SimpleServletHandlerAdapter
2017-11-11 11:00:54.869 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.view.OrderExcelView
2017-11-11 11:00:54.870 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.view.OrderPdfView
2017-11-11 11:00:54.871 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:172)ogger{36} - Filtering: com.example.bookstore.web.view.SimpleConfigurableViewResolver
2017-11-11 11:00:55.067 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59)ogger{36} - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-11-11 11:00:55.067 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59)ogger{36} - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2017-11-11 11:00:55.095 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50)ogger{36} - No JNDI name configured for binding Ejb3Configuration
2017-11-11 11:00:55.105 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1735)ogger{36} - Preparing to build session factory with filters : {}
2017-11-11 11:00:55.151 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3403)ogger{36} - Processing hbm.xml files
2017-11-11 11:00:55.152 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3433)ogger{36} - Process annotated classes
2017-11-11 11:00:55.156 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Permission
2017-11-11 11:00:55.185 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.194 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Permission
2017-11-11 11:00:55.198 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Permission on table Permission
2017-11-11 11:00:55.222 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Permission), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.226 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.230 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.236 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Permission), mappingColumn=permission, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property permission with lazy=false
2017-11-11 11:00:55.237 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for permission
2017-11-11 11:00:55.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property permission
2017-11-11 11:00:55.239 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Book
2017-11-11 11:00:55.239 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.240 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Book
2017-11-11 11:00:55.240 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Book on table Book
2017-11-11 11:00:55.244 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.244 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.244 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.245 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.245 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Isbn, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.245 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property Isbn with lazy=false
2017-11-11 11:00:55.246 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for Isbn
2017-11-11 11:00:55.246 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property Isbn
2017-11-11 11:00:55.247 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.247 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property author with lazy=false
2017-11-11 11:00:55.247 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for author
2017-11-11 11:00:55.248 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property author
2017-11-11 11:00:55.250 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.250 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=category, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.254 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property category
2017-11-11 11:00:55.254 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=description, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.254 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property description with lazy=false
2017-11-11 11:00:55.255 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for description
2017-11-11 11:00:55.255 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property description
2017-11-11 11:00:55.255 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.255 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property price with lazy=false
2017-11-11 11:00:55.256 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for price
2017-11-11 11:00:55.256 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property price
2017-11-11 11:00:55.256 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.256 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property title with lazy=false
2017-11-11 11:00:55.257 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for title
2017-11-11 11:00:55.257 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property title
2017-11-11 11:00:55.257 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=year, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.257 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property year with lazy=false
2017-11-11 11:00:55.258 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for year
2017-11-11 11:00:55.258 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property year
2017-11-11 11:00:55.258 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.OrderDetail
2017-11-11 11:00:55.258 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.259 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name OrderDetail
2017-11-11 11:00:55.259 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.OrderDetail on table OrderDetail
2017-11-11 11:00:55.260 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderDetail), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.261 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.261 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.261 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.261 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.262 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderDetail), mappingColumn=book, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.262 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property book
2017-11-11 11:00:55.262 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderDetail), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.263 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property quantity with lazy=false
2017-11-11 11:00:55.263 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for quantity
2017-11-11 11:00:55.263 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property quantity
2017-11-11 11:00:55.263 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Order
2017-11-11 11:00:55.264 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.264 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Order
2017-11-11 11:00:55.264 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Order on table orders
2017-11-11 11:00:55.274 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.275 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.275 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.275 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.276 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.276 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=account, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.276 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property account
2017-11-11 11:00:55.276 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billingAddress, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.287 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property boxNumber
2017-11-11 11:00:55.287 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_boxNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.288 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property boxNumber with lazy=false
2017-11-11 11:00:55.288 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for boxNumber
2017-11-11 11:00:55.288 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property boxNumber
2017-11-11 11:00:55.289 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property city
2017-11-11 11:00:55.289 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_city, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.289 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property city with lazy=false
2017-11-11 11:00:55.289 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for city
2017-11-11 11:00:55.290 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property city
2017-11-11 11:00:55.290 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property country
2017-11-11 11:00:55.290 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_country, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.290 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property country with lazy=false
2017-11-11 11:00:55.291 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for country
2017-11-11 11:00:55.291 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property country
2017-11-11 11:00:55.291 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property houseNumber
2017-11-11 11:00:55.291 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_houseNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.292 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property houseNumber with lazy=false
2017-11-11 11:00:55.292 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for houseNumber
2017-11-11 11:00:55.292 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property houseNumber
2017-11-11 11:00:55.292 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property postalCode
2017-11-11 11:00:55.292 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_postalCode, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.293 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property postalCode with lazy=false
2017-11-11 11:00:55.293 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for postalCode
2017-11-11 11:00:55.293 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property postalCode
2017-11-11 11:00:55.293 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property street
2017-11-11 11:00:55.294 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billing_street, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.294 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property street with lazy=false
2017-11-11 11:00:55.294 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for street
2017-11-11 11:00:55.294 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property street
2017-11-11 11:00:55.295 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property billingAddress
2017-11-11 11:00:55.295 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=billingSameAsShipping, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.295 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property billingSameAsShipping with lazy=false
2017-11-11 11:00:55.295 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for billingSameAsShipping
2017-11-11 11:00:55.296 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property billingSameAsShipping
2017-11-11 11:00:55.296 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=deliveryDate, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.296 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property deliveryDate with lazy=false
2017-11-11 11:00:55.296 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for deliveryDate
2017-11-11 11:00:55.297 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property deliveryDate
2017-11-11 11:00:55.297 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=orderDate, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.297 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property orderDate with lazy=false
2017-11-11 11:00:55.297 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for orderDate
2017-11-11 11:00:55.298 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property orderDate
2017-11-11 11:00:55.298 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='order_id', referencedColumn='', mappedBy=''}
2017-11-11 11:00:55.298 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=orderDetails, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.300 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=null, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.311 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=element, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.311 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=orderDetails_KEY, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.312 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='orderDetails_KEY', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.313 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.314 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.314 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:400)ogger{36} - Collection role: com.example.bookstore.domain.Order.orderDetails
2017-11-11 11:00:55.317 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property orderDetails
2017-11-11 11:00:55.317 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shippingAddress, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.318 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property boxNumber
2017-11-11 11:00:55.318 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_boxNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.318 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property boxNumber with lazy=false
2017-11-11 11:00:55.318 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for boxNumber
2017-11-11 11:00:55.319 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property boxNumber
2017-11-11 11:00:55.319 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property city
2017-11-11 11:00:55.319 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_city, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.319 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property city with lazy=false
2017-11-11 11:00:55.320 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for city
2017-11-11 11:00:55.320 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property city
2017-11-11 11:00:55.320 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property country
2017-11-11 11:00:55.320 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_country, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.321 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property country with lazy=false
2017-11-11 11:00:55.321 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for country
2017-11-11 11:00:55.321 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property country
2017-11-11 11:00:55.321 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property houseNumber
2017-11-11 11:00:55.322 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_houseNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.322 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property houseNumber with lazy=false
2017-11-11 11:00:55.322 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for houseNumber
2017-11-11 11:00:55.322 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property houseNumber
2017-11-11 11:00:55.323 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property postalCode
2017-11-11 11:00:55.323 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_postalCode, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.323 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property postalCode with lazy=false
2017-11-11 11:00:55.323 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for postalCode
2017-11-11 11:00:55.324 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property postalCode
2017-11-11 11:00:55.324 [main] DEBUG org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(Ejb3Column.java:428)ogger{36} - Column(s) overridden for property street
2017-11-11 11:00:55.324 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=shipping_street, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.324 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property street with lazy=false
2017-11-11 11:00:55.325 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for street
2017-11-11 11:00:55.325 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property street
2017-11-11 11:00:55.325 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property shippingAddress
2017-11-11 11:00:55.325 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=totalOrderPrice, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.326 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property totalOrderPrice with lazy=false
2017-11-11 11:00:55.326 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for totalOrderPrice
2017-11-11 11:00:55.326 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property totalOrderPrice
2017-11-11 11:00:55.326 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Category
2017-11-11 11:00:55.327 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.327 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Category
2017-11-11 11:00:55.327 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Category on table Category
2017-11-11 11:00:55.329 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Category), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.330 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.330 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.330 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.331 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Category), mappingColumn=name, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.331 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property name with lazy=false
2017-11-11 11:00:55.331 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for name
2017-11-11 11:00:55.332 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property name
2017-11-11 11:00:55.332 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Role
2017-11-11 11:00:55.332 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.332 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Role
2017-11-11 11:00:55.333 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Role on table Role
2017-11-11 11:00:55.335 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.335 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.336 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.336 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.336 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=null, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.337 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=element, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.337 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=permissions_KEY, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.337 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='permissions_KEY', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.338 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.338 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.338 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:400)ogger{36} - Collection role: com.example.bookstore.domain.Role.permissions
2017-11-11 11:00:55.339 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property permissions
2017-11-11 11:00:55.339 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.339 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property role with lazy=false
2017-11-11 11:00:55.339 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for role
2017-11-11 11:00:55.340 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property role
2017-11-11 11:00:55.340 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:531)ogger{36} - Binding entity from annotated class: com.example.bookstore.domain.Account
2017-11-11 11:00:55.340 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-11-11 11:00:55.341 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394)ogger{36} - Import with entity name Account
2017-11-11 11:00:55.341 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564)ogger{36} - Bind entity com.example.bookstore.domain.Account on table Account
2017-11-11 11:00:55.346 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.347 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property id with lazy=false
2017-11-11 11:00:55.347 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for id
2017-11-11 11:00:55.348 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property id
2017-11-11 11:00:55.348 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=address, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.349 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=boxNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.349 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property boxNumber with lazy=false
2017-11-11 11:00:55.349 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for boxNumber
2017-11-11 11:00:55.349 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property boxNumber
2017-11-11 11:00:55.350 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.350 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property city with lazy=false
2017-11-11 11:00:55.350 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for city
2017-11-11 11:00:55.350 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property city
2017-11-11 11:00:55.351 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.351 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property country with lazy=false
2017-11-11 11:00:55.351 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for country
2017-11-11 11:00:55.351 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property country
2017-11-11 11:00:55.352 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=houseNumber, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.352 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property houseNumber with lazy=false
2017-11-11 11:00:55.352 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for houseNumber
2017-11-11 11:00:55.352 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property houseNumber
2017-11-11 11:00:55.353 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=postalCode, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.353 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property postalCode with lazy=false
2017-11-11 11:00:55.353 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for postalCode
2017-11-11 11:00:55.353 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property postalCode
2017-11-11 11:00:55.354 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.354 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property street with lazy=false
2017-11-11 11:00:55.354 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for street
2017-11-11 11:00:55.354 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property street
2017-11-11 11:00:55.355 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property address
2017-11-11 11:00:55.355 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=dateOfBirth, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.355 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property dateOfBirth with lazy=false
2017-11-11 11:00:55.355 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for dateOfBirth
2017-11-11 11:00:55.356 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property dateOfBirth
2017-11-11 11:00:55.356 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=emailAddress, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.356 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property emailAddress with lazy=false
2017-11-11 11:00:55.357 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for emailAddress
2017-11-11 11:00:55.357 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property emailAddress
2017-11-11 11:00:55.357 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.357 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property firstName with lazy=false
2017-11-11 11:00:55.358 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for firstName
2017-11-11 11:00:55.358 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property firstName
2017-11-11 11:00:55.358 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.358 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property lastName with lazy=false
2017-11-11 11:00:55.359 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for lastName
2017-11-11 11:00:55.359 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property lastName
2017-11-11 11:00:55.359 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.359 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property password with lazy=false
2017-11-11 11:00:55.359 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for password
2017-11-11 11:00:55.360 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property password
2017-11-11 11:00:55.360 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.360 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.361 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.361 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2017-11-11 11:00:55.361 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.362 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2017-11-11 11:00:55.362 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:400)ogger{36} - Collection role: com.example.bookstore.domain.Account.roles
2017-11-11 11:00:55.362 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property roles
2017-11-11 11:00:55.362 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196)ogger{36} - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-11-11 11:00:55.363 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179)ogger{36} - MetadataSourceProcessor property username with lazy=false
2017-11-11 11:00:55.363 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:294)ogger{36} - building SimpleValue for username
2017-11-11 11:00:55.363 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)ogger{36} - Building property username
2017-11-11 11:00:55.364 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.365 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for permission
2017-11-11 11:00:55.365 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.365 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for Isbn
2017-11-11 11:00:55.365 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for author
2017-11-11 11:00:55.365 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for description
2017-11-11 11:00:55.366 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for price
2017-11-11 11:00:55.366 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for title
2017-11-11 11:00:55.366 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for year
2017-11-11 11:00:55.366 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.366 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for quantity
2017-11-11 11:00:55.367 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.367 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for boxNumber
2017-11-11 11:00:55.367 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for city
2017-11-11 11:00:55.367 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for country
2017-11-11 11:00:55.367 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for houseNumber
2017-11-11 11:00:55.368 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for postalCode
2017-11-11 11:00:55.368 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for street
2017-11-11 11:00:55.368 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for billingSameAsShipping
2017-11-11 11:00:55.368 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for deliveryDate
2017-11-11 11:00:55.368 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for orderDate
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for boxNumber
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for city
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for country
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for houseNumber
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for postalCode
2017-11-11 11:00:55.369 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for street
2017-11-11 11:00:55.370 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for totalOrderPrice
2017-11-11 11:00:55.370 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.370 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for name
2017-11-11 11:00:55.370 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for role
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for id
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for boxNumber
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for city
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for country
2017-11-11 11:00:55.371 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for houseNumber
2017-11-11 11:00:55.372 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for postalCode
2017-11-11 11:00:55.372 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for street
2017-11-11 11:00:55.372 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for dateOfBirth
2017-11-11 11:00:55.372 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for emailAddress
2017-11-11 11:00:55.372 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for firstName
2017-11-11 11:00:55.373 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for lastName
2017-11-11 11:00:55.373 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for password
2017-11-11 11:00:55.373 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:332)ogger{36} - Setting SimpleValue typeName for username
2017-11-11 11:00:55.374 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1409)ogger{36} - Processing fk mappings (*ToOne and JoinedSubclass)
2017-11-11 11:00:55.379 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1589)ogger{36} - Processing extends queue
2017-11-11 11:00:55.379 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1643)ogger{36} - Processing extends queue
2017-11-11 11:00:55.379 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592)ogger{36} - Processing collection mappings
2017-11-11 11:00:55.380 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64)ogger{36} - Second pass for collection: com.example.bookstore.domain.Account.roles
2017-11-11 11:00:55.380 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1049)ogger{36} - Binding as ManyToMany: com.example.bookstore.domain.Account.roles
2017-11-11 11:00:55.383 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80)ogger{36} - Mapped collection key: Account_id, element: roles_id
2017-11-11 11:00:55.383 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64)ogger{36} - Second pass for collection: com.example.bookstore.domain.Role.permissions
2017-11-11 11:00:55.383 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1049)ogger{36} - Binding as ManyToMany: com.example.bookstore.domain.Role.permissions
2017-11-11 11:00:55.384 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80)ogger{36} - Mapped collection key: Role_id, element: permissions_id
2017-11-11 11:00:55.384 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64)ogger{36} - Second pass for collection: com.example.bookstore.domain.Order.orderDetails
2017-11-11 11:00:55.384 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:759)ogger{36} - Binding a OneToMany: com.example.bookstore.domain.Order.orderDetails through a foreign key
2017-11-11 11:00:55.385 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:788)ogger{36} - Mapping collection: com.example.bookstore.domain.Order.orderDetails -> OrderDetail
2017-11-11 11:00:55.385 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80)ogger{36} - Mapped collection key: order_id, one-to-many: com.example.bookstore.domain.OrderDetail
2017-11-11 11:00:55.385 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1602)ogger{36} - Processing native query and ResultSetMapping mappings
2017-11-11 11:00:55.385 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1610)ogger{36} - Processing association property references
2017-11-11 11:00:55.385 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1632)ogger{36} - Processing foreign key constraints
2017-11-11 11:00:55.386 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Role
2017-11-11 11:00:55.386 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Account
2017-11-11 11:00:55.386 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Category
2017-11-11 11:00:55.386 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Book
2017-11-11 11:00:55.386 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Order
2017-11-11 11:00:55.387 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Permission
2017-11-11 11:00:55.387 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Role
2017-11-11 11:00:55.387 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Account
2017-11-11 11:00:55.414 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188)ogger{36} - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2017-11-11 11:00:55.438 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121)ogger{36} - Database ->
       name : H2
    version : 1.4.187 (2015-04-10)
      major : 1
      minor : 4
2017-11-11 11:00:55.439 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127)ogger{36} - Driver ->
       name : H2 JDBC Driver
    version : 1.4.187 (2015-04-10)
      major : 1
      minor : 4
2017-11-11 11:00:55.439 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133)ogger{36} - JDBC version : 4.0
2017-11-11 11:00:55.542 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:123)ogger{36} - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2017-11-11 11:00:55.579 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:113)ogger{36} - Automatic flush during beforeCompletion(): disabled
2017-11-11 11:00:55.579 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:119)ogger{36} - Automatic session close at end of transaction: disabled
2017-11-11 11:00:55.580 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:130)ogger{36} - JDBC batch size: 15
2017-11-11 11:00:55.580 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:136)ogger{36} - JDBC batch updates for versioned data: disabled
2017-11-11 11:00:55.580 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:146)ogger{36} - Scrollable result sets: enabled
2017-11-11 11:00:55.581 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:152)ogger{36} - Wrap result sets: disabled
2017-11-11 11:00:55.581 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:158)ogger{36} - JDBC3 getGeneratedKeys(): enabled
2017-11-11 11:00:55.581 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:170)ogger{36} - multi-tenancy strategy : NONE
2017-11-11 11:00:55.581 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:176)ogger{36} - Connection release mode: auto
2017-11-11 11:00:55.582 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73)ogger{36} - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2017-11-11 11:00:55.585 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:218)ogger{36} - Default batch fetch size: 1
2017-11-11 11:00:55.585 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:224)ogger{36} - Generate SQL with comments: disabled
2017-11-11 11:00:55.586 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:230)ogger{36} - Order SQL updates by primary key: disabled
2017-11-11 11:00:55.586 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236)ogger{36} - Order SQL inserts for batching: disabled
2017-11-11 11:00:55.586 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:508)ogger{36} - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-11-11 11:00:55.589 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48)ogger{36} - HHH000397: Using ASTQueryTranslatorFactory
2017-11-11 11:00:55.590 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:246)ogger{36} - Query language substitutions: {}
2017-11-11 11:00:55.590 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:252)ogger{36} - JPA-QL strict compliance: enabled
2017-11-11 11:00:55.590 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:260)ogger{36} - Second-level cache: enabled
2017-11-11 11:00:55.591 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266)ogger{36} - Query cache: enabled
2017-11-11 11:00:55.592 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryCacheFactory(SettingsFactory.java:428)ogger{36} - Query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory
2017-11-11 11:00:55.593 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:448)ogger{36} - Cache region factory : org.hibernate.cache.ehcache.EhCacheRegionFactory
2017-11-11 11:00:55.620 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281)ogger{36} - Optimize cache for minimal puts: enabled
2017-11-11 11:00:55.620 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:296)ogger{36} - Structured second-level cache entries: disabled
2017-11-11 11:00:55.620 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:305)ogger{36} - Statistics: disabled
2017-11-11 11:00:55.621 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311)ogger{36} - Deleted entity synthetic identifier rollback: disabled
2017-11-11 11:00:55.621 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:335)ogger{36} - Default entity-mode: pojo
2017-11-11 11:00:55.621 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:341)ogger{36} - Named query checking : enabled
2017-11-11 11:00:55.621 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347)ogger{36} - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-11-11 11:00:55.622 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:365)ogger{36} - Allow initialization of lazy state outside session : : disabled
2017-11-11 11:00:55.629 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:225)ogger{36} - Building session factory
2017-11-11 11:00:55.916 [main] INFO  org.hibernate.cache.spi.UpdateTimestampsCache.<init>(UpdateTimestampsCache.java:61)ogger{36} - HHH000250: Starting update timestamps cache at region: org.hibernate.cache.spi.UpdateTimestampsCache
2017-11-11 11:00:55.920 [main] WARN  org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory.getCache(AbstractEhcacheRegionFactory.java:180)ogger{36} - HHH020003: Could not find a specific ehcache configuration for cache named [org.hibernate.cache.spi.UpdateTimestampsCache]; using defaults.
2017-11-11 11:00:55.921 [main] DEBUG org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory.getCache(AbstractEhcacheRegionFactory.java:183)ogger{36} - started EHCache region: org.hibernate.cache.spi.UpdateTimestampsCache
2017-11-11 11:00:55.925 [main] INFO  org.hibernate.cache.internal.StandardQueryCache.<init>(StandardQueryCache.java:85)ogger{36} - HHH000248: Starting query cache at region: org.hibernate.cache.internal.StandardQueryCache
2017-11-11 11:00:55.925 [main] WARN  org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory.getCache(AbstractEhcacheRegionFactory.java:180)ogger{36} - HHH020003: Could not find a specific ehcache configuration for cache named [org.hibernate.cache.internal.StandardQueryCache]; using defaults.
2017-11-11 11:00:55.929 [main] DEBUG org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory.getCache(AbstractEhcacheRegionFactory.java:183)ogger{36} - started EHCache region: org.hibernate.cache.internal.StandardQueryCache
2017-11-11 11:00:55.932 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)ogger{36} - Session factory constructed with filter configurations : {}
2017-11-11 11:00:55.932 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:278)ogger{36} - Instantiating session factory with properties: {java.vendor=Oracle Corporation, localRepository=C:\Users\c.vazquezlos\.m2\repository, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes, user.country.format=ES, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_144-b01, hibernate.connection.autocommit=true, user.name=c.vazquezlos, user.language.format=es, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_144\jre\bin, java.version=1.8.0_144, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_144\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_144\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@45fd9a4d, surefire.real.class.path=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\surefire\surefirebooter2161819339828247799.jar, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=25.144-b01, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\c.vazquezlos, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Docker\Docker\Resources\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Brackets\command;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.5.0\bin;C:\Users\c.vazquezlos\AppData\Local\Microsoft\WindowsApps;C:\Users\c.vazquezlos\AppData\Roaming\npm;., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\surefire\surefirebooter2161819339828247799.jar C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\surefire\surefire1917106237097755567tmp C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\surefire\surefire_0664708524265674984tmp, java.class.path=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\test-classes;C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\classes;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-orm\4.1.7.RELEASE\spring-orm-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-beans\4.1.7.RELEASE\spring-beans-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-core\4.1.7.RELEASE\spring-core-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-jdbc\4.1.7.RELEASE\spring-jdbc-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-tx\4.1.7.RELEASE\spring-tx-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-webmvc\4.1.7.RELEASE\spring-webmvc-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-context\4.1.7.RELEASE\spring-context-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-aop\4.1.7.RELEASE\spring-aop-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-expression\4.1.7.RELEASE\spring-expression-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-web\4.1.7.RELEASE\spring-web-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-oxm\4.1.7.RELEASE\spring-oxm-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\c.vazquezlos\.m2\repository\com\h2database\h2\1.4.187\h2-1.4.187.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\c.vazquezlos\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\c.vazquezlos\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\c.vazquezlos\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\c.vazquezlos\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.9.Final\hibernate-entitymanager-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-ehcache\4.1.9.Final\hibernate-ehcache-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\net\sf\ehcache\ehcache-core\2.4.3\ehcache-core-2.4.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-validator\4.3.0.Final\hibernate-validator-4.3.0.Final.jar;C:\Users\c.vazquezlos\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\c.vazquezlos\.m2\repository\com\lowagie\itext\2.1.7\itext-2.1.7.jar;C:\Users\c.vazquezlos\.m2\repository\bouncycastle\bcmail-jdk14\138\bcmail-jdk14-138.jar;C:\Users\c.vazquezlos\.m2\repository\bouncycastle\bcprov-jdk14\138\bcprov-jdk14-138.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bctsp-jdk14\1.38\bctsp-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bcprov-jdk14\1.38\bcprov-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bcmail-jdk14\1.38\bcmail-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\jexcelapi\jxl\2.6.12\jxl-2.6.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\c.vazquezlos\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\c.vazquezlos\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\c.vazquezlos\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\c.vazquezlos\.m2\repository\org\mockito\mockito-all\2.0.2-beta\mockito-all-2.0.2-beta.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\2.46.0\selenium-firefox-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\2.46.0\selenium-remote-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\cglib\cglib-nodep\2.1_3\cglib-nodep-2.1_3.jar;C:\Users\c.vazquezlos\.m2\repository\com\google\code\gson\gson\2.3.1\gson-2.3.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-api\2.46.0\selenium-api-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\com\google\guava\guava\18.0\guava-18.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\java\dev\jna\jna\4.1.0\jna-4.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\java\dev\jna\jna-platform\4.1.0\jna-platform-4.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-htmlunit-driver\2.46.0\selenium-htmlunit-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\htmlunit\htmlunit\2.17\htmlunit-2.17.jar;C:\Users\c.vazquezlos\.m2\repository\xalan\xalan\2.7.2\xalan-2.7.2.jar;C:\Users\c.vazquezlos\.m2\repository\xalan\serializer\2.7.2\serializer-2.7.2.jar;C:\Users\c.vazquezlos\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpmime\4.4.1\httpmime-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\htmlunit\htmlunit-core-js\2.17\htmlunit-core-js-2.17.jar;C:\Users\c.vazquezlos\.m2\repository\xerces\xercesImpl\2.11.0\xercesImpl-2.11.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\nekohtml\nekohtml\1.9.22\nekohtml-1.9.22.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\cssparser\cssparser\0.9.16\cssparser-0.9.16.jar;C:\Users\c.vazquezlos\.m2\repository\org\w3c\css\sac\1.3\sac-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-client\9.2.11.v20150529\websocket-client-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\jetty-util\9.2.11.v20150529\jetty-util-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\jetty-io\9.2.11.v20150529\jetty-io-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-common\9.2.11.v20150529\websocket-common-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-api\9.2.11.v20150529\websocket-api-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpclient\4.4.1\httpclient-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpcore\4.4.1\httpcore-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\slf4j-simple\1.7.12\slf4j-simple-1.7.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-api\2.2.1\tiles-api-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-core\2.2.1\tiles-core-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;C:\Users\c.vazquezlos\.m2\repository\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\jcl-over-slf4j\1.5.8\jcl-over-slf4j-1.5.8.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-servlet\2.2.1\tiles-servlet-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-jsp\2.2.1\tiles-jsp-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-template\2.2.1\tiles-template-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, hibernate.cache.use_query_cache=true, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, surefire.test.class.path=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\test-classes;C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator\target\classes;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-orm\4.1.7.RELEASE\spring-orm-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-beans\4.1.7.RELEASE\spring-beans-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-core\4.1.7.RELEASE\spring-core-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-jdbc\4.1.7.RELEASE\spring-jdbc-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-tx\4.1.7.RELEASE\spring-tx-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-webmvc\4.1.7.RELEASE\spring-webmvc-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-context\4.1.7.RELEASE\spring-context-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-aop\4.1.7.RELEASE\spring-aop-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-expression\4.1.7.RELEASE\spring-expression-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-web\4.1.7.RELEASE\spring-web-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-oxm\4.1.7.RELEASE\spring-oxm-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\c.vazquezlos\.m2\repository\com\h2database\h2\1.4.187\h2-1.4.187.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\c.vazquezlos\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\c.vazquezlos\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\c.vazquezlos\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\c.vazquezlos\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.9.Final\hibernate-entitymanager-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-ehcache\4.1.9.Final\hibernate-ehcache-4.1.9.Final.jar;C:\Users\c.vazquezlos\.m2\repository\net\sf\ehcache\ehcache-core\2.4.3\ehcache-core-2.4.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\hibernate\hibernate-validator\4.3.0.Final\hibernate-validator-4.3.0.Final.jar;C:\Users\c.vazquezlos\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\c.vazquezlos\.m2\repository\com\lowagie\itext\2.1.7\itext-2.1.7.jar;C:\Users\c.vazquezlos\.m2\repository\bouncycastle\bcmail-jdk14\138\bcmail-jdk14-138.jar;C:\Users\c.vazquezlos\.m2\repository\bouncycastle\bcprov-jdk14\138\bcprov-jdk14-138.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bctsp-jdk14\1.38\bctsp-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bcprov-jdk14\1.38\bcprov-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\org\bouncycastle\bcmail-jdk14\1.38\bcmail-jdk14-1.38.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\jexcelapi\jxl\2.6.12\jxl-2.6.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\c.vazquezlos\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\c.vazquezlos\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\c.vazquezlos\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\c.vazquezlos\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\c.vazquezlos\.m2\repository\org\mockito\mockito-all\2.0.2-beta\mockito-all-2.0.2-beta.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\2.46.0\selenium-firefox-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\2.46.0\selenium-remote-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\cglib\cglib-nodep\2.1_3\cglib-nodep-2.1_3.jar;C:\Users\c.vazquezlos\.m2\repository\com\google\code\gson\gson\2.3.1\gson-2.3.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-api\2.46.0\selenium-api-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\com\google\guava\guava\18.0\guava-18.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\java\dev\jna\jna\4.1.0\jna-4.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\java\dev\jna\jna-platform\4.1.0\jna-platform-4.1.0.jar;C:\Users\c.vazquezlos\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\seleniumhq\selenium\selenium-htmlunit-driver\2.46.0\selenium-htmlunit-driver-2.46.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\htmlunit\htmlunit\2.17\htmlunit-2.17.jar;C:\Users\c.vazquezlos\.m2\repository\xalan\xalan\2.7.2\xalan-2.7.2.jar;C:\Users\c.vazquezlos\.m2\repository\xalan\serializer\2.7.2\serializer-2.7.2.jar;C:\Users\c.vazquezlos\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpmime\4.4.1\httpmime-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\htmlunit\htmlunit-core-js\2.17\htmlunit-core-js-2.17.jar;C:\Users\c.vazquezlos\.m2\repository\xerces\xercesImpl\2.11.0\xercesImpl-2.11.0.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\nekohtml\nekohtml\1.9.22\nekohtml-1.9.22.jar;C:\Users\c.vazquezlos\.m2\repository\net\sourceforge\cssparser\cssparser\0.9.16\cssparser-0.9.16.jar;C:\Users\c.vazquezlos\.m2\repository\org\w3c\css\sac\1.3\sac-1.3.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-client\9.2.11.v20150529\websocket-client-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\jetty-util\9.2.11.v20150529\jetty-util-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\jetty-io\9.2.11.v20150529\jetty-io-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-common\9.2.11.v20150529\websocket-common-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\eclipse\jetty\websocket\websocket-api\9.2.11.v20150529\websocket-api-9.2.11.v20150529.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpclient\4.4.1\httpclient-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\httpcomponents\httpcore\4.4.1\httpcore-4.4.1.jar;C:\Users\c.vazquezlos\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\slf4j-simple\1.7.12\slf4j-simple-1.7.12.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-api\2.2.1\tiles-api-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-core\2.2.1\tiles-core-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;C:\Users\c.vazquezlos\.m2\repository\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;C:\Users\c.vazquezlos\.m2\repository\org\slf4j\jcl-over-slf4j\1.5.8\jcl-over-slf4j-1.5.8.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-servlet\2.2.1\tiles-servlet-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-jsp\2.2.1\tiles-jsp-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\org\apache\tiles\tiles-template\2.2.1\tiles-template-2.2.1.jar;C:\Users\c.vazquezlos\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;, java.io.tmpdir=C:\Users\CCD16~1.VAZ\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=ENABLE_SELECTIVE, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, user.dir=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, basedir=C:\Users\c.vazquezlos\Documents\GitHub\LOGANALYZER-SpringLogsGenerator, hibernate.cache.use_second_level_cache=true, file.encoding=Cp1252, hibernate.use_identifier_rollback=false, java.specification.version=1.8}
2017-11-11 11:00:55.969 [main] INFO  org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27)ogger{36} - HV000001: Hibernate Validator 4.3.0.Final
2017-11-11 11:00:55.981 [main] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106)ogger{36} - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2017-11-11 11:00:55.983 [main] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117)ogger{36} - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2017-11-11 11:00:55.986 [main] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184)ogger{36} - Trying to load META-INF/validation.xml for XML based Validator configuration.
2017-11-11 11:00:55.992 [main] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187)ogger{36} - No META-INF/validation.xml found. Using annotation based configuration only.
2017-11-11 11:00:56.093 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3cc20577, payload=[Ljava.lang.Class;@33a630fa}}.
2017-11-11 11:00:56.094 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5767b2af, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7b22ec89}}.
2017-11-11 11:00:56.098 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={flags=[Ljavax.validation.constraints.Pattern$Flag;@547c04c4, groups=[Ljava.lang.Class;@30e92cb9, regexp=.*, message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@7fae4d4a}}.
2017-11-11 11:00:56.102 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@5ffc5491, payload=[Ljava.lang.Class;@705202d1}}.
2017-11-11 11:00:56.103 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3e58d65e, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@3bd55d8}}.
2017-11-11 11:00:56.103 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7e0b9178, payload=[Ljava.lang.Class;@61942c1}}.
2017-11-11 11:00:56.104 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@408a247c, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@62a8fd44}}.
2017-11-11 11:00:56.108 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@56febdc, payload=[Ljava.lang.Class;@3b8ee898}}.
2017-11-11 11:00:56.109 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@294bdeb4, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5300f14a}}.
2017-11-11 11:00:56.110 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@77bb0ab5, payload=[Ljava.lang.Class;@f2c488}}.
2017-11-11 11:00:56.110 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@7bc9e6ab, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5488b5c5}}.
2017-11-11 11:00:56.111 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@712ca57b, payload=[Ljava.lang.Class;@4564e94b}}.
2017-11-11 11:00:56.111 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@51745f40, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@45673f68}}.
2017-11-11 11:00:56.158 [main] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106)ogger{36} - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2017-11-11 11:00:56.158 [main] DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117)ogger{36} - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2017-11-11 11:00:56.158 [main] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184)ogger{36} - Trying to load META-INF/validation.xml for XML based Validator configuration.
2017-11-11 11:00:56.159 [main] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187)ogger{36} - No META-INF/validation.xml found. Using annotation based configuration only.
2017-11-11 11:00:56.183 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.261 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Book
2017-11-11 11:00:56.262 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from Book where id =?
2017-11-11 11:00:56.263 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select book_.id, book_.Isbn as Isbn1_, book_.author as author1_, book_.category_id as category8_1_, book_.description as descript4_1_, book_.price as price1_, book_.title as title1_, book_.year as year1_ from Book book_ where book_.id=?
2017-11-11 11:00:56.263 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into Book (Isbn, author, category_id, description, price, title, year, id) values (?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.263 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update Book set Isbn=?, author=?, category_id=?, description=?, price=?, title=?, year=? where id=?
2017-11-11 11:00:56.263 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from Book where id=?
2017-11-11 11:00:56.264 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.273 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Order
2017-11-11 11:00:56.274 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from orders where id =?
2017-11-11 11:00:56.274 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select order_.id, order_.account_id as account18_3_, order_.billing_boxNumber as billing2_3_, order_.billing_city as billing3_3_, order_.billing_country as billing4_3_, order_.billing_houseNumber as billing5_3_, order_.billing_postalCode as billing6_3_, order_.billing_street as billing7_3_, order_.billingSameAsShipping as billingS8_3_, order_.deliveryDate as delivery9_3_, order_.orderDate as orderDate3_, order_.shipping_boxNumber as shipping11_3_, order_.shipping_city as shipping12_3_, order_.shipping_country as shipping13_3_, order_.shipping_houseNumber as shipping14_3_, order_.shipping_postalCode as shipping15_3_, order_.shipping_street as shipping16_3_, order_.totalOrderPrice as totalOr17_3_ from orders order_ where order_.id=?
2017-11-11 11:00:56.274 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into orders (account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.275 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update orders set account_id=?, billing_boxNumber=?, billing_city=?, billing_country=?, billing_houseNumber=?, billing_postalCode=?, billing_street=?, billingSameAsShipping=?, deliveryDate=?, orderDate=?, shipping_boxNumber=?, shipping_city=?, shipping_country=?, shipping_houseNumber=?, shipping_postalCode=?, shipping_street=?, totalOrderPrice=? where id=?
2017-11-11 11:00:56.275 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from orders where id=?
2017-11-11 11:00:56.275 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into orders (id, account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.279 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Category
2017-11-11 11:00:56.279 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from Category where id =?
2017-11-11 11:00:56.280 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select category_.id, category_.name as name4_ from Category category_ where category_.id=?
2017-11-11 11:00:56.280 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into Category (name, id) values (?, ?)
2017-11-11 11:00:56.280 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update Category set name=? where id=?
2017-11-11 11:00:56.281 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from Category where id=?
2017-11-11 11:00:56.281 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into Category (id, name) values (null, ?)
2017-11-11 11:00:56.284 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Permission
2017-11-11 11:00:56.285 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from Permission where id =?
2017-11-11 11:00:56.285 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select permission_.id, permission_.permission as permission0_ from Permission permission_ where permission_.id=?
2017-11-11 11:00:56.285 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into Permission (permission, id) values (?, ?)
2017-11-11 11:00:56.286 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update Permission set permission=? where id=?
2017-11-11 11:00:56.286 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from Permission where id=?
2017-11-11 11:00:56.286 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into Permission (id, permission) values (null, ?)
2017-11-11 11:00:56.289 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Role
2017-11-11 11:00:56.290 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from Role where id =?
2017-11-11 11:00:56.290 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select role_.id, role_.role as role5_ from Role role_ where role_.id=?
2017-11-11 11:00:56.291 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into Role (role, id) values (?, ?)
2017-11-11 11:00:56.291 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update Role set role=? where id=?
2017-11-11 11:00:56.291 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from Role where id=?
2017-11-11 11:00:56.291 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into Role (id, role) values (null, ?)
2017-11-11 11:00:56.295 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.OrderDetail
2017-11-11 11:00:56.295 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from OrderDetail where id =?
2017-11-11 11:00:56.296 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select orderdetai_.id, orderdetai_.book_id as book3_2_, orderdetai_.quantity as quantity2_ from OrderDetail orderdetai_ where orderdetai_.id=?
2017-11-11 11:00:56.296 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into OrderDetail (book_id, quantity, id) values (?, ?, ?)
2017-11-11 11:00:56.296 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update OrderDetail set book_id=?, quantity=? where id=?
2017-11-11 11:00:56.297 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from OrderDetail where id=?
2017-11-11 11:00:56.297 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:56.304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3552)ogger{36} - Static SQL for entity: com.example.bookstore.domain.Account
2017-11-11 11:00:56.304 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3557)ogger{36} -  Version select: select id from Account where id =?
2017-11-11 11:00:56.305 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3560)ogger{36} -  Snapshot select: select account_.id, account_.boxNumber as boxNumber6_, account_.city as city6_, account_.country as country6_, account_.houseNumber as houseNum5_6_, account_.postalCode as postalCode6_, account_.street as street6_, account_.dateOfBirth as dateOfBi8_6_, account_.emailAddress as emailAdd9_6_, account_.firstName as firstName6_, account_.lastName as lastName6_, account_.password as password6_, account_.username as username6_ from Account account_ where account_.id=?
2017-11-11 11:00:56.305 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3563)ogger{36} -  Insert 0: insert into Account (boxNumber, city, country, houseNumber, postalCode, street, dateOfBirth, emailAddress, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.305 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3564)ogger{36} -  Update 0: update Account set boxNumber=?, city=?, country=?, houseNumber=?, postalCode=?, street=?, dateOfBirth=?, emailAddress=?, firstName=?, lastName=?, password=?, username=? where id=?
2017-11-11 11:00:56.306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3565)ogger{36} -  Delete 0: delete from Account where id=?
2017-11-11 11:00:56.306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3568)ogger{36} -  Identity insert: insert into Account (id, boxNumber, city, country, houseNumber, postalCode, street, dateOfBirth, emailAddress, firstName, lastName, password, username) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:56.318 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)ogger{36} - Static SQL for collection: com.example.bookstore.domain.Order.orderDetails
2017-11-11 11:00:56.319 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:670)ogger{36} -  Row insert: update OrderDetail set order_id=? where id=?
2017-11-11 11:00:56.319 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)ogger{36} -  Row delete: update OrderDetail set order_id=null where order_id=? and id=?
2017-11-11 11:00:56.319 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:673)ogger{36} -  One-shot delete: update OrderDetail set order_id=null where order_id=?
2017-11-11 11:00:56.321 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)ogger{36} - Static SQL for collection: com.example.bookstore.domain.Role.permissions
2017-11-11 11:00:56.322 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:670)ogger{36} -  Row insert: insert into Role_Permission (Role_id, permissions_id) values (?, ?)
2017-11-11 11:00:56.322 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:671)ogger{36} -  Row update: update Role_Permission set permissions_id=? where Role_id=? and permissions_id=?
2017-11-11 11:00:56.322 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)ogger{36} -  Row delete: delete from Role_Permission where Role_id=? and permissions_id=?
2017-11-11 11:00:56.323 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:673)ogger{36} -  One-shot delete: delete from Role_Permission where Role_id=?
2017-11-11 11:00:56.323 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)ogger{36} - Static SQL for collection: com.example.bookstore.domain.Account.roles
2017-11-11 11:00:56.324 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:670)ogger{36} -  Row insert: insert into Account_Role (Account_id, roles_id) values (?, ?)
2017-11-11 11:00:56.324 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:671)ogger{36} -  Row update: update Account_Role set roles_id=? where Account_id=? and roles_id=?
2017-11-11 11:00:56.325 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)ogger{36} -  Row delete: delete from Account_Role where Account_id=? and roles_id=?
2017-11-11 11:00:56.325 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:673)ogger{36} -  One-shot delete: delete from Account_Role where Account_id=?
2017-11-11 11:00:56.354 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [NONE]: select book0_.id as id1_1_, book0_.Isbn as Isbn1_1_, book0_.author as author1_1_, book0_.category_id as category8_1_1_, book0_.description as descript4_1_1_, book0_.price as price1_1_, book0_.title as title1_1_, book0_.year as year1_1_, category1_.id as id4_0_, category1_.name as name4_0_ from Book book0_ inner join Category category1_ on book0_.category_id=category1_.id where book0_.id=?
2017-11-11 11:00:56.355 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [READ]: select book0_.id as id1_1_, book0_.Isbn as Isbn1_1_, book0_.author as author1_1_, book0_.category_id as category8_1_1_, book0_.description as descript4_1_1_, book0_.price as price1_1_, book0_.title as title1_1_, book0_.year as year1_1_, category1_.id as id4_0_, category1_.name as name4_0_ from Book book0_ inner join Category category1_ on book0_.category_id=category1_.id where book0_.id=?
2017-11-11 11:00:56.355 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [UPGRADE]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.356 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [UPGRADE_NOWAIT]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.357 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [FORCE]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [PESSIMISTIC_READ]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.358 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.359 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=? for update
2017-11-11 11:00:56.360 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [OPTIMISTIC]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=?
2017-11-11 11:00:56.361 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=?
2017-11-11 11:00:56.369 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Book: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=?
2017-11-11 11:00:56.370 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Book: select book0_.id as id1_0_, book0_.Isbn as Isbn1_0_, book0_.author as author1_0_, book0_.category_id as category8_1_0_, book0_.description as descript4_1_0_, book0_.price as price1_0_, book0_.title as title1_0_, book0_.year as year1_0_ from Book book0_ where book0_.id=?
2017-11-11 11:00:56.370 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [NONE]: select order0_.id as id3_1_, order0_.account_id as account18_3_1_, order0_.billing_boxNumber as billing2_3_1_, order0_.billing_city as billing3_3_1_, order0_.billing_country as billing4_3_1_, order0_.billing_houseNumber as billing5_3_1_, order0_.billing_postalCode as billing6_3_1_, order0_.billing_street as billing7_3_1_, order0_.billingSameAsShipping as billingS8_3_1_, order0_.deliveryDate as delivery9_3_1_, order0_.orderDate as orderDate3_1_, order0_.shipping_boxNumber as shipping11_3_1_, order0_.shipping_city as shipping12_3_1_, order0_.shipping_country as shipping13_3_1_, order0_.shipping_houseNumber as shipping14_3_1_, order0_.shipping_postalCode as shipping15_3_1_, order0_.shipping_street as shipping16_3_1_, order0_.totalOrderPrice as totalOr17_3_1_, account1_.id as id6_0_, account1_.boxNumber as boxNumber6_0_, account1_.city as city6_0_, account1_.country as country6_0_, account1_.houseNumber as houseNum5_6_0_, account1_.postalCode as postalCode6_0_, account1_.street as street6_0_, account1_.dateOfBirth as dateOfBi8_6_0_, account1_.emailAddress as emailAdd9_6_0_, account1_.firstName as firstName6_0_, account1_.lastName as lastName6_0_, account1_.password as password6_0_, account1_.username as username6_0_ from orders order0_ inner join Account account1_ on order0_.account_id=account1_.id where order0_.id=?
2017-11-11 11:00:56.371 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [READ]: select order0_.id as id3_1_, order0_.account_id as account18_3_1_, order0_.billing_boxNumber as billing2_3_1_, order0_.billing_city as billing3_3_1_, order0_.billing_country as billing4_3_1_, order0_.billing_houseNumber as billing5_3_1_, order0_.billing_postalCode as billing6_3_1_, order0_.billing_street as billing7_3_1_, order0_.billingSameAsShipping as billingS8_3_1_, order0_.deliveryDate as delivery9_3_1_, order0_.orderDate as orderDate3_1_, order0_.shipping_boxNumber as shipping11_3_1_, order0_.shipping_city as shipping12_3_1_, order0_.shipping_country as shipping13_3_1_, order0_.shipping_houseNumber as shipping14_3_1_, order0_.shipping_postalCode as shipping15_3_1_, order0_.shipping_street as shipping16_3_1_, order0_.totalOrderPrice as totalOr17_3_1_, account1_.id as id6_0_, account1_.boxNumber as boxNumber6_0_, account1_.city as city6_0_, account1_.country as country6_0_, account1_.houseNumber as houseNum5_6_0_, account1_.postalCode as postalCode6_0_, account1_.street as street6_0_, account1_.dateOfBirth as dateOfBi8_6_0_, account1_.emailAddress as emailAdd9_6_0_, account1_.firstName as firstName6_0_, account1_.lastName as lastName6_0_, account1_.password as password6_0_, account1_.username as username6_0_ from orders order0_ inner join Account account1_ on order0_.account_id=account1_.id where order0_.id=?
2017-11-11 11:00:56.372 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [UPGRADE]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [UPGRADE_NOWAIT]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [FORCE]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [PESSIMISTIC_READ]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [PESSIMISTIC_WRITE]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=? for update
2017-11-11 11:00:56.375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [OPTIMISTIC]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=?
2017-11-11 11:00:56.375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.id as id3_0_, order0_.account_id as account18_3_0_, order0_.billing_boxNumber as billing2_3_0_, order0_.billing_city as billing3_3_0_, order0_.billing_country as billing4_3_0_, order0_.billing_houseNumber as billing5_3_0_, order0_.billing_postalCode as billing6_3_0_, order0_.billing_street as billing7_3_0_, order0_.billingSameAsShipping as billingS8_3_0_, order0_.deliveryDate as delivery9_3_0_, order0_.orderDate as orderDate3_0_, order0_.shipping_boxNumber as shipping11_3_0_, order0_.shipping_city as shipping12_3_0_, order0_.shipping_country as shipping13_3_0_, order0_.shipping_houseNumber as shipping14_3_0_, order0_.shipping_postalCode as shipping15_3_0_, order0_.shipping_street as shipping16_3_0_, order0_.totalOrderPrice as totalOr17_3_0_ from orders order0_ where order0_.id=?
2017-11-11 11:00:56.378 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Order: select order0_.id as id3_1_, order0_.account_id as account18_3_1_, order0_.billing_boxNumber as billing2_3_1_, order0_.billing_city as billing3_3_1_, order0_.billing_country as billing4_3_1_, order0_.billing_houseNumber as billing5_3_1_, order0_.billing_postalCode as billing6_3_1_, order0_.billing_street as billing7_3_1_, order0_.billingSameAsShipping as billingS8_3_1_, order0_.deliveryDate as delivery9_3_1_, order0_.orderDate as orderDate3_1_, order0_.shipping_boxNumber as shipping11_3_1_, order0_.shipping_city as shipping12_3_1_, order0_.shipping_country as shipping13_3_1_, order0_.shipping_houseNumber as shipping14_3_1_, order0_.shipping_postalCode as shipping15_3_1_, order0_.shipping_street as shipping16_3_1_, order0_.totalOrderPrice as totalOr17_3_1_, orderdetai1_.order_id as order4_3_3_, orderdetai1_.id as id2_3_, orderdetai1_.id as id2_0_, orderdetai1_.book_id as book3_2_0_, orderdetai1_.quantity as quantity2_0_ from orders order0_ left outer join OrderDetail orderdetai1_ on order0_.id=orderdetai1_.order_id where order0_.id=?
2017-11-11 11:00:56.379 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Order: select order0_.id as id3_1_, order0_.account_id as account18_3_1_, order0_.billing_boxNumber as billing2_3_1_, order0_.billing_city as billing3_3_1_, order0_.billing_country as billing4_3_1_, order0_.billing_houseNumber as billing5_3_1_, order0_.billing_postalCode as billing6_3_1_, order0_.billing_street as billing7_3_1_, order0_.billingSameAsShipping as billingS8_3_1_, order0_.deliveryDate as delivery9_3_1_, order0_.orderDate as orderDate3_1_, order0_.shipping_boxNumber as shipping11_3_1_, order0_.shipping_city as shipping12_3_1_, order0_.shipping_country as shipping13_3_1_, order0_.shipping_houseNumber as shipping14_3_1_, order0_.shipping_postalCode as shipping15_3_1_, order0_.shipping_street as shipping16_3_1_, order0_.totalOrderPrice as totalOr17_3_1_, orderdetai1_.order_id as order4_3_3_, orderdetai1_.id as id2_3_, orderdetai1_.id as id2_0_, orderdetai1_.book_id as book3_2_0_, orderdetai1_.quantity as quantity2_0_ from orders order0_ left outer join OrderDetail orderdetai1_ on order0_.id=orderdetai1_.order_id where order0_.id=?
2017-11-11 11:00:56.380 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [NONE]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.380 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [READ]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [UPGRADE]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [UPGRADE_NOWAIT]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.381 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [FORCE]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.382 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [PESSIMISTIC_READ]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.382 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [PESSIMISTIC_WRITE]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [PESSIMISTIC_FORCE_INCREMENT]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=? for update
2017-11-11 11:00:56.383 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [OPTIMISTIC]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.384 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Category [OPTIMISTIC_FORCE_INCREMENT]: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.384 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Category: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.384 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Category: select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:56.385 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [NONE]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.385 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [READ]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.386 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [UPGRADE]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.386 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [UPGRADE_NOWAIT]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.386 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [FORCE]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.387 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [PESSIMISTIC_READ]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.387 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [PESSIMISTIC_WRITE]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.387 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [PESSIMISTIC_FORCE_INCREMENT]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=? for update
2017-11-11 11:00:56.388 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [OPTIMISTIC]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.388 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Permission [OPTIMISTIC_FORCE_INCREMENT]: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.388 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Permission: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.389 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Permission: select permission0_.id as id0_0_, permission0_.permission as permission0_0_ from Permission permission0_ where permission0_.id=?
2017-11-11 11:00:56.389 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [NONE]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=?
2017-11-11 11:00:56.390 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [READ]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=?
2017-11-11 11:00:56.390 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [UPGRADE]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.390 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [UPGRADE_NOWAIT]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.391 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [FORCE]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.391 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [PESSIMISTIC_READ]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.392 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [PESSIMISTIC_WRITE]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.392 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=? for update
2017-11-11 11:00:56.392 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [OPTIMISTIC]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=?
2017-11-11 11:00:56.393 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id5_0_, role0_.role as role5_0_ from Role role0_ where role0_.id=?
2017-11-11 11:00:56.395 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Role: select role0_.id as id5_1_, role0_.role as role5_1_, permission1_.Role_id as Role1_5_3_, permission2_.id as permissi2_8_3_, permission2_.id as id0_0_, permission2_.permission as permission0_0_ from Role role0_ left outer join Role_Permission permission1_ on role0_.id=permission1_.Role_id left outer join Permission permission2_ on permission1_.permissions_id=permission2_.id where role0_.id=?
2017-11-11 11:00:56.395 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Role: select role0_.id as id5_1_, role0_.role as role5_1_, permission1_.Role_id as Role1_5_3_, permission2_.id as permissi2_8_3_, permission2_.id as id0_0_, permission2_.permission as permission0_0_ from Role role0_ left outer join Role_Permission permission1_ on role0_.id=permission1_.Role_id left outer join Permission permission2_ on permission1_.permissions_id=permission2_.id where role0_.id=?
2017-11-11 11:00:56.396 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [NONE]: select orderdetai0_.id as id2_2_, orderdetai0_.book_id as book3_2_2_, orderdetai0_.quantity as quantity2_2_, book1_.id as id1_0_, book1_.Isbn as Isbn1_0_, book1_.author as author1_0_, book1_.category_id as category8_1_0_, book1_.description as descript4_1_0_, book1_.price as price1_0_, book1_.title as title1_0_, book1_.year as year1_0_, category2_.id as id4_1_, category2_.name as name4_1_ from OrderDetail orderdetai0_ inner join Book book1_ on orderdetai0_.book_id=book1_.id left outer join Category category2_ on book1_.category_id=category2_.id where orderdetai0_.id=?
2017-11-11 11:00:56.397 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [READ]: select orderdetai0_.id as id2_2_, orderdetai0_.book_id as book3_2_2_, orderdetai0_.quantity as quantity2_2_, book1_.id as id1_0_, book1_.Isbn as Isbn1_0_, book1_.author as author1_0_, book1_.category_id as category8_1_0_, book1_.description as descript4_1_0_, book1_.price as price1_0_, book1_.title as title1_0_, book1_.year as year1_0_, category2_.id as id4_1_, category2_.name as name4_1_ from OrderDetail orderdetai0_ inner join Book book1_ on orderdetai0_.book_id=book1_.id left outer join Category category2_ on book1_.category_id=category2_.id where orderdetai0_.id=?
2017-11-11 11:00:56.398 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [UPGRADE]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.398 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [UPGRADE_NOWAIT]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.398 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [FORCE]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.399 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [PESSIMISTIC_READ]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.399 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [PESSIMISTIC_WRITE]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.400 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [PESSIMISTIC_FORCE_INCREMENT]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=? for update
2017-11-11 11:00:56.400 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [OPTIMISTIC]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=?
2017-11-11 11:00:56.400 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.OrderDetail [OPTIMISTIC_FORCE_INCREMENT]: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=?
2017-11-11 11:00:56.401 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.OrderDetail: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=?
2017-11-11 11:00:56.401 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.OrderDetail: select orderdetai0_.id as id2_0_, orderdetai0_.book_id as book3_2_0_, orderdetai0_.quantity as quantity2_0_ from OrderDetail orderdetai0_ where orderdetai0_.id=?
2017-11-11 11:00:56.402 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [NONE]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=?
2017-11-11 11:00:56.402 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [READ]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=?
2017-11-11 11:00:56.402 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [UPGRADE]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.403 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [UPGRADE_NOWAIT]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.403 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [FORCE]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.404 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [PESSIMISTIC_READ]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.404 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [PESSIMISTIC_WRITE]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.405 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=? for update
2017-11-11 11:00:56.405 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [OPTIMISTIC]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=?
2017-11-11 11:00:56.405 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123)ogger{36} - Static select for entity com.example.bookstore.domain.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.id as id6_0_, account0_.boxNumber as boxNumber6_0_, account0_.city as city6_0_, account0_.country as country6_0_, account0_.houseNumber as houseNum5_6_0_, account0_.postalCode as postalCode6_0_, account0_.street as street6_0_, account0_.dateOfBirth as dateOfBi8_6_0_, account0_.emailAddress as emailAdd9_6_0_, account0_.firstName as firstName6_0_, account0_.lastName as lastName6_0_, account0_.password as password6_0_, account0_.username as username6_0_ from Account account0_ where account0_.id=?
2017-11-11 11:00:56.406 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_MERGE on entity com.example.bookstore.domain.Account: select account0_.id as id6_1_, account0_.boxNumber as boxNumber6_1_, account0_.city as city6_1_, account0_.country as country6_1_, account0_.houseNumber as houseNum5_6_1_, account0_.postalCode as postalCode6_1_, account0_.street as street6_1_, account0_.dateOfBirth as dateOfBi8_6_1_, account0_.emailAddress as emailAdd9_6_1_, account0_.firstName as firstName6_1_, account0_.lastName as lastName6_1_, account0_.password as password6_1_, account0_.username as username6_1_, roles1_.Account_id as Account1_6_3_, role2_.id as roles2_7_3_, role2_.id as id5_0_, role2_.role as role5_0_ from Account account0_ left outer join Account_Role roles1_ on account0_.id=roles1_.Account_id left outer join Role role2_ on roles1_.roles_id=role2_.id where account0_.id=?
2017-11-11 11:00:56.407 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56)ogger{36} - Static select for action ACTION_REFRESH on entity com.example.bookstore.domain.Account: select account0_.id as id6_1_, account0_.boxNumber as boxNumber6_1_, account0_.city as city6_1_, account0_.country as country6_1_, account0_.houseNumber as houseNum5_6_1_, account0_.postalCode as postalCode6_1_, account0_.street as street6_1_, account0_.dateOfBirth as dateOfBi8_6_1_, account0_.emailAddress as emailAdd9_6_1_, account0_.firstName as firstName6_1_, account0_.lastName as lastName6_1_, account0_.password as password6_1_, account0_.username as username6_1_, roles1_.Account_id as Account1_6_3_, role2_.id as roles2_7_3_, role2_.id as id5_0_, role2_.role as role5_0_ from Account account0_ left outer join Account_Role roles1_ on account0_.id=roles1_.Account_id left outer join Role role2_ on roles1_.roles_id=role2_.id where account0_.id=?
2017-11-11 11:00:56.414 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82)ogger{36} - Static select for one-to-many com.example.bookstore.domain.Order.orderDetails: select orderdetai0_.order_id as order4_3_3_, orderdetai0_.id as id2_3_, orderdetai0_.id as id2_2_, orderdetai0_.book_id as book3_2_2_, orderdetai0_.quantity as quantity2_2_, book1_.id as id1_0_, book1_.Isbn as Isbn1_0_, book1_.author as author1_0_, book1_.category_id as category8_1_0_, book1_.description as descript4_1_0_, book1_.price as price1_0_, book1_.title as title1_0_, book1_.year as year1_0_, category2_.id as id4_1_, category2_.name as name4_1_ from OrderDetail orderdetai0_ inner join Book book1_ on orderdetai0_.book_id=book1_.id left outer join Category category2_ on book1_.category_id=category2_.id where orderdetai0_.order_id=?
2017-11-11 11:00:56.418 [main] DEBUG org.hibernate.loader.collection.BasicCollectionLoader.<init>(BasicCollectionLoader.java:83)ogger{36} - Static select for collection com.example.bookstore.domain.Role.permissions: select permission0_.Role_id as Role1_5_1_, permission0_.permissions_id as permissi2_8_1_, permission1_.id as id0_0_, permission1_.permission as permission0_0_ from Role_Permission permission0_ inner join Permission permission1_ on permission0_.permissions_id=permission1_.id where permission0_.Role_id=?
2017-11-11 11:00:56.418 [main] DEBUG org.hibernate.loader.collection.BasicCollectionLoader.<init>(BasicCollectionLoader.java:83)ogger{36} - Static select for collection com.example.bookstore.domain.Account.roles: select roles0_.Account_id as Account1_6_1_, roles0_.roles_id as roles2_7_1_, role1_.id as id5_0_, role1_.role as role5_0_ from Account_Role roles0_ inner join Role role1_ on roles0_.roles_id=role1_.id where roles0_.Account_id=?
2017-11-11 11:00:56.421 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62)ogger{36} - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@765df79d
2017-11-11 11:00:56.421 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75)ogger{36} - Registering SessionFactory: 43db02eb-84d3-47b8-b031-8a931abf1c6e (<unnamed>)
2017-11-11 11:00:56.421 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82)ogger{36} - Not binding SessionFactory to JNDI, no JNDI name configured
2017-11-11 11:00:56.421 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:486)ogger{36} - Instantiated session factory
2017-11-11 11:00:56.430 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182)ogger{36} - HHH000228: Running hbm2ddl schema update
2017-11-11 11:00:56.431 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193)ogger{36} - HHH000102: Fetching database metadata
2017-11-11 11:00:56.434 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205)ogger{36} - HHH000396: Updating schema
2017-11-11 11:00:56.434 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3403)ogger{36} - Processing hbm.xml files
2017-11-11 11:00:56.434 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3433)ogger{36} - Process annotated classes
2017-11-11 11:00:56.435 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1409)ogger{36} - Processing fk mappings (*ToOne and JoinedSubclass)
2017-11-11 11:00:56.435 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1589)ogger{36} - Processing extends queue
2017-11-11 11:00:56.435 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1643)ogger{36} - Processing extends queue
2017-11-11 11:00:56.435 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592)ogger{36} - Processing collection mappings
2017-11-11 11:00:56.436 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1602)ogger{36} - Processing native query and ResultSetMapping mappings
2017-11-11 11:00:56.436 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1610)ogger{36} - Processing association property references
2017-11-11 11:00:56.436 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1632)ogger{36} - Processing foreign key constraints
2017-11-11 11:00:56.436 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Role
2017-11-11 11:00:56.437 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Account
2017-11-11 11:00:56.437 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Category
2017-11-11 11:00:56.437 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Book
2017-11-11 11:00:56.437 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Order
2017-11-11 11:00:56.438 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Permission
2017-11-11 11:00:56.438 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Role
2017-11-11 11:00:56.438 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1700)ogger{36} - Resolving reference to class: com.example.bookstore.domain.Account
2017-11-11 11:00:56.447 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Account
2017-11-11 11:00:56.448 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.449 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Account_Role
2017-11-11 11:00:56.450 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Book
2017-11-11 11:00:56.450 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.451 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Category
2017-11-11 11:00:56.451 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.452 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: OrderDetail
2017-11-11 11:00:56.453 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.454 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Permission
2017-11-11 11:00:56.455 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.456 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Role
2017-11-11 11:00:56.456 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.458 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Role_Permission
2017-11-11 11:00:56.459 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: orders
2017-11-11 11:00:56.459 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.461 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Account
2017-11-11 11:00:56.462 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Account_Role
2017-11-11 11:00:56.463 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Book
2017-11-11 11:00:56.464 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Category
2017-11-11 11:00:56.465 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: OrderDetail
2017-11-11 11:00:56.467 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Permission
2017-11-11 11:00:56.468 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Role
2017-11-11 11:00:56.469 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: Role_Permission
2017-11-11 11:00:56.470 [main] INFO  org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:120)ogger{36} - HHH000262: Table not found: orders
2017-11-11 11:00:56.471 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.471 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.472 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.472 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.472 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.472 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.473 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107)ogger{36} - Setting dialect [org.hibernate.dialect.H2Dialect]
2017-11-11 11:00:56.473 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Account (id bigint generated by default as identity, boxNumber varchar(255), city varchar(255), country varchar(255), houseNumber varchar(255), postalCode varchar(255), street varchar(255), dateOfBirth timestamp, emailAddress varchar(255) not null, firstName varchar(255), lastName varchar(255), password varchar(255) not null, username varchar(255) not null, primary key (id))
2017-11-11 11:00:56.483 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Account_Role (Account_id bigint not null, roles_id bigint not null)
2017-11-11 11:00:56.484 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Book (id bigint generated by default as identity, Isbn varchar(255), author varchar(255), description varchar(255), price decimal(19,2), title varchar(255), year integer, category_id bigint not null, primary key (id))
2017-11-11 11:00:56.486 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Category (id bigint generated by default as identity, name varchar(255) not null, primary key (id))
2017-11-11 11:00:56.488 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table OrderDetail (id bigint generated by default as identity, quantity integer not null, book_id bigint not null, order_id bigint, primary key (id))
2017-11-11 11:00:56.489 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Permission (id bigint generated by default as identity, permission varchar(255), primary key (id), unique (permission))
2017-11-11 11:00:56.496 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Role (id bigint generated by default as identity, role varchar(255), primary key (id), unique (role))
2017-11-11 11:00:56.498 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table Role_Permission (Role_id bigint not null, permissions_id bigint not null)
2017-11-11 11:00:56.498 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - create table orders (id bigint generated by default as identity, billing_boxNumber varchar(255), billing_city varchar(255), billing_country varchar(255), billing_houseNumber varchar(255), billing_postalCode varchar(255), billing_street varchar(255), billingSameAsShipping boolean not null, deliveryDate timestamp, orderDate timestamp, shipping_boxNumber varchar(255), shipping_city varchar(255), shipping_country varchar(255), shipping_houseNumber varchar(255), shipping_postalCode varchar(255), shipping_street varchar(255), totalOrderPrice decimal(19,2), account_id bigint not null, primary key (id))
2017-11-11 11:00:56.500 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table Account_Role add constraint FK4AC9CB888BFCAD6 foreign key (roles_id) references Role
2017-11-11 11:00:56.523 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table Account_Role add constraint FK4AC9CB8831137737 foreign key (Account_id) references Account
2017-11-11 11:00:56.525 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table Book add constraint FK1FAF099BC3ABFD foreign key (category_id) references Category
2017-11-11 11:00:56.527 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table OrderDetail add constraint FKAA2F011F1C69599D foreign key (book_id) references Book
2017-11-11 11:00:56.530 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table OrderDetail add constraint FKAA2F011F438ADAD7 foreign key (order_id) references orders
2017-11-11 11:00:56.532 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table Role_Permission add constraint FKF8A56938E38F52C8 foreign key (permissions_id) references Permission
2017-11-11 11:00:56.534 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table Role_Permission add constraint FKF8A569386AA7527D foreign key (Role_id) references Role
2017-11-11 11:00:56.536 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:226)ogger{36} - alter table orders add constraint FKC3DF62E531137737 foreign key (account_id) references Account
2017-11-11 11:00:56.538 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:240)ogger{36} - HHH000232: Schema update complete
2017-11-11 11:00:56.538 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1058)ogger{36} - Checking 0 named HQL queries
2017-11-11 11:00:56.539 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1081)ogger{36} - Checking 0 named SQL queries
2017-11-11 11:00:56.549 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110)ogger{36} - Statistics initialized [enabled=false]
2017-11-11 11:00:56.608 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:56)ogger{36} - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@5b12012e
2017-11-11 11:00:56.608 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:66)ogger{36} - Registering EntityManagerFactory: bookstore 
2017-11-11 11:00:56.781 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:56.781 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:56.782 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:56.782 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:56.782 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
2017-11-11 11:00:56.828 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265)ogger{36} - parse() - HQL: select count(a.id) from com.example.bookstore.domain.Account a
2017-11-11 11:00:56.840 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283)ogger{36} - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  \-[IDENT] Node: 'bookstore'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Account'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'a'
                \-[IDENT] Node: 'id'

2017-11-11 11:00:56.840 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:56.867 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121)ogger{36} - select << begin [level=1, statement=select]
2017-11-11 11:00:56.889 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157)ogger{36} - FromClause{level=1} : com.example.bookstore.domain.Account (a) -> account0_
2017-11-11 11:00:56.891 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : a -> account0_.id
2017-11-11 11:00:56.894 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599)ogger{36} - getDataType() : id -> org.hibernate.type.LongType@74bf1791
2017-11-11 11:00:56.897 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : a.id -> account0_.id
2017-11-11 11:00:56.900 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125)ogger{36} - select : finishing up [level=1, statement=select]
2017-11-11 11:00:56.901 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:629)ogger{36} - processQuery() :  ( SELECT ( {select clause} ( count ( account0_.id account0_.id id ) ) ) ( FromClause{level=1} Account account0_ ) )
2017-11-11 11:00:56.910 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175)ogger{36} - Using FROM fragment [Account account0_]
2017-11-11 11:00:56.911 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129)ogger{36} - select >> end [level=1, statement=select]
2017-11-11 11:00:56.912 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252)ogger{36} - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'account0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=account0_,className=com.example.bookstore.domain.Account,classAlias=a}
    |  |     +-[ALIAS_REF] IdentNode: 'account0_.id' {alias=a, className=com.example.bookstore.domain.Account, tableAlias=account0_}
    |  |     \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.example.bookstore.domain.Account}}

2017-11-11 11:00:56.912 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:56.922 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235)ogger{36} - HQL: select count(a.id) from com.example.bookstore.domain.Account a
2017-11-11 11:00:56.923 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236)ogger{36} - SQL: select count(account0_.id) as col_0_0_ from Account account0_
2017-11-11 11:00:56.923 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:56.965 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - select count(account0_.id) as col_0_0_ from Account account0_
2017-11-11 11:00:57.000 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 0
2017-11-11 11:00:57.000 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: 
2017-11-11 11:00:57.048 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.059 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@19b047fe, payload=[Ljava.lang.Class;@22590e3e}}.
2017-11-11 11:00:57.059 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5f780a86, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@446c3920}}.
2017-11-11 11:00:57.060 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={flags=[Ljavax.validation.constraints.Pattern$Flag;@547c04c4, groups=[Ljava.lang.Class;@2b329bbd, regexp=.*, message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@34819867}}.
2017-11-11 11:00:57.062 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@56681eaf, payload=[Ljava.lang.Class;@72d0f2b4}}.
2017-11-11 11:00:57.063 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@34fe326d, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@30a7c98f}}.
2017-11-11 11:00:57.064 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@41fed14f, payload=[Ljava.lang.Class;@4d6ee47}}.
2017-11-11 11:00:57.065 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@c6da8bb, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@3bae64d0}}.
2017-11-11 11:00:57.095 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@1aac188d, payload=[Ljava.lang.Class;@7026b7ee}}.
2017-11-11 11:00:57.096 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@7cb8437d, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@62a4417}}.
2017-11-11 11:00:57.097 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@713064e8, payload=[Ljava.lang.Class;@4fad6218}}.
2017-11-11 11:00:57.097 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@68217d41, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@1ac45389}}.
2017-11-11 11:00:57.098 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@39c1fe0b, payload=[Ljava.lang.Class;@5ae95707}}.
2017-11-11 11:00:57.098 [main] DEBUG org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.parseComposingConstraints(ConstraintDescriptorImpl.java:427)ogger{36} - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@367b22e5, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@fca387}}.
2017-11-11 11:00:57.102 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account (id, boxNumber, city, country, houseNumber, postalCode, street, dateOfBirth, emailAddress, firstName, lastName, password, username) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.111 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.113 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account], timestamp: 6186575942094848
2017-11-11 11:00:57.113 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account value: 6186575942094848
2017-11-11 11:00:57.122 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.123 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role (id, role) values (null, ?)
2017-11-11 11:00:57.124 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.125 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role], timestamp: 6186575942144000
2017-11-11 11:00:57.125 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role value: 6186575942144000
2017-11-11 11:00:57.126 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.127 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Permission (id, permission) values (null, ?)
2017-11-11 11:00:57.128 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.128 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Permission], timestamp: 6186575942156288
2017-11-11 11:00:57.128 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Permission value: 6186575942156288
2017-11-11 11:00:57.130 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.131 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account (id, boxNumber, city, country, houseNumber, postalCode, street, dateOfBirth, emailAddress, firstName, lastName, password, username) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.132 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.132 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account], timestamp: 6186575942172672
2017-11-11 11:00:57.133 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account value: 6186575942172672
2017-11-11 11:00:57.133 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.133 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role (id, role) values (null, ?)
2017-11-11 11:00:57.134 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.134 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role], timestamp: 6186575942180864
2017-11-11 11:00:57.135 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role value: 6186575942180864
2017-11-11 11:00:57.135 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.135 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Permission (id, permission) values (null, ?)
2017-11-11 11:00:57.136 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.136 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Permission], timestamp: 6186575942189056
2017-11-11 11:00:57.136 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Permission value: 6186575942189056
2017-11-11 11:00:57.137 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.137 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Permission (id, permission) values (null, ?)
2017-11-11 11:00:57.138 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.138 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Permission], timestamp: 6186575942197248
2017-11-11 11:00:57.138 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Permission value: 6186575942197248
2017-11-11 11:00:57.140 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.141 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account (id, boxNumber, city, country, houseNumber, postalCode, street, dateOfBirth, emailAddress, firstName, lastName, password, username) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.142 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.142 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account], timestamp: 6186575942213632
2017-11-11 11:00:57.142 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account value: 6186575942213632
2017-11-11 11:00:57.143 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.143 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role (id, role) values (null, ?)
2017-11-11 11:00:57.144 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.145 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role], timestamp: 6186575942225920
2017-11-11 11:00:57.145 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role value: 6186575942225920
2017-11-11 11:00:57.147 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.148 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.149 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.149 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575942242304
2017-11-11 11:00:57.149 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575942242304
2017-11-11 11:00:57.151 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.151 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.152 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.152 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575942254592
2017-11-11 11:00:57.152 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575942254592
2017-11-11 11:00:57.153 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.154 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.154 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.155 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575942266880
2017-11-11 11:00:57.155 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575942266880
2017-11-11 11:00:57.156 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.158 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.161 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.162 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575942295552
2017-11-11 11:00:57.162 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575942295552
2017-11-11 11:00:57.164 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.164 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.165 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.166 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575942311936
2017-11-11 11:00:57.166 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575942311936
2017-11-11 11:00:57.167 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.168 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.169 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.170 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575942328320
2017-11-11 11:00:57.170 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575942328320
2017-11-11 11:00:57.171 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.172 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.174 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 4
2017-11-11 11:00:57.175 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575942348800
2017-11-11 11:00:57.175 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575942348800
2017-11-11 11:00:57.178 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.179 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.180 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 5
2017-11-11 11:00:57.180 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575942369280
2017-11-11 11:00:57.181 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575942369280
2017-11-11 11:00:57.183 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.185 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into orders (id, account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.189 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.190 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [orders], timestamp: 6186575942410240
2017-11-11 11:00:57.190 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: orders value: 6186575942410240
2017-11-11 11:00:57.191 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.192 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:57.194 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 1
2017-11-11 11:00:57.196 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942434816
2017-11-11 11:00:57.197 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942434816
2017-11-11 11:00:57.199 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.199 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into orders (id, account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.201 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.201 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [orders], timestamp: 6186575942455296
2017-11-11 11:00:57.201 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: orders value: 6186575942455296
2017-11-11 11:00:57.202 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.202 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:57.203 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 2
2017-11-11 11:00:57.203 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942463488
2017-11-11 11:00:57.204 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942463488
2017-11-11 11:00:57.206 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.206 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into orders (id, account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.207 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.208 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [orders], timestamp: 6186575942483968
2017-11-11 11:00:57.208 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: orders value: 6186575942483968
2017-11-11 11:00:57.208 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.209 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:57.210 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 3
2017-11-11 11:00:57.210 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942492160
2017-11-11 11:00:57.210 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942492160
2017-11-11 11:00:57.212 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.213 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into orders (id, account_id, billing_boxNumber, billing_city, billing_country, billing_houseNumber, billing_postalCode, billing_street, billingSameAsShipping, deliveryDate, orderDate, shipping_boxNumber, shipping_city, shipping_country, shipping_houseNumber, shipping_postalCode, shipping_street, totalOrderPrice) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.214 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 4
2017-11-11 11:00:57.214 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [orders], timestamp: 6186575942508544
2017-11-11 11:00:57.215 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: orders value: 6186575942508544
2017-11-11 11:00:57.215 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.216 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:57.216 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 4
2017-11-11 11:00:57.217 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942520832
2017-11-11 11:00:57.217 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942520832
2017-11-11 11:00:57.217 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.218 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into OrderDetail (id, book_id, quantity) values (null, ?, ?)
2017-11-11 11:00:57.218 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 5
2017-11-11 11:00:57.219 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942529024
2017-11-11 11:00:57.219 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942529024
2017-11-11 11:00:57.219 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173)ogger{36} - committing
2017-11-11 11:00:57.220 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.223 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.230 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Account.roles#1], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.230 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Role.permissions#1], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.230 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Account.roles#2], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.231 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Role.permissions#2], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.231 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Account.roles#3], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.231 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Role.permissions#3], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.232 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Order.orderDetails#1], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.232 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Order.orderDetails#2], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.233 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Order.orderDetails#3], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.233 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:190)ogger{36} - Collection found: [com.example.bookstore.domain.Order.orderDetails#4], was: [<unreferenced>] (initialized)
2017-11-11 11:00:57.235 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 26 objects
2017-11-11 11:00:57.236 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 10 (re)creations, 0 updates, 0 removals to 10 collections
2017-11-11 11:00:57.238 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.238 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Role{role=ROLE_CUSTOMER, permissions=[com.example.bookstore.domain.Permission#1], id=1}
2017-11-11 11:00:57.238 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Role{role=ROLE_ADMIN, permissions=[com.example.bookstore.domain.Permission#2, com.example.bookstore.domain.Permission#3], id=2}
2017-11-11 11:00:57.239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Permission{permission=PERM_ADD_BOOKS, id=2}
2017-11-11 11:00:57.239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Permission{permission=PERM_CREATE_ORDER, id=1}
2017-11-11 11:00:57.239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Role{role=ROLE_AUTHOR, permissions=[com.example.bookstore.domain.Permission#2], id=3}
2017-11-11 11:00:57.239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Permission{permission=PERM_ADD_CATEGORIES, id=3}
2017-11-11 11:00:57.240 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780201485677, year=1999, author=Martin Fowler, price=41.39, description=Refactoring is about improving the design of existing code. It is the process of changing a software system in such a way that it does not alter the external behavior of the code, yet improves its internal structure., id=2, category=com.example.bookstore.domain.Category#1, title=Refactoring: Improving the Design of Existing Code}
2017-11-11 11:00:57.240 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780321356680, year=2008, author=Joshua Bloch, price=31.20, description=Brings together seventy-eight indispensable programmer's rules of thumb., id=1, category=com.example.bookstore.domain.Category#1, title=Effective Java}
2017-11-11 11:00:57.240 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.OrderDetail{quantity=1, book=com.example.bookstore.domain.Book#1, id=1}
2017-11-11 11:00:57.240 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.OrderDetail{quantity=1, book=com.example.bookstore.domain.Book#2, id=2}
2017-11-11 11:00:57.241 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Order{billingSameAsShipping=true, orderDetails=[com.example.bookstore.domain.OrderDetail#1], shippingAddress=null, id=1, billingAddress=null, totalOrderPrice=31.20, deliveryDate=Sat Nov 11 11:00:57 CET 2017, orderDate=Sat Nov 11 11:00:57 CET 2017, account=com.example.bookstore.domain.Account#1}
2017-11-11 11:00:57.241 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Order{billingSameAsShipping=true, orderDetails=[com.example.bookstore.domain.OrderDetail#2], shippingAddress=null, id=2, billingAddress=null, totalOrderPrice=41.39, deliveryDate=Sat Nov 11 11:00:57 CET 2017, orderDate=Sat Nov 11 11:00:57 CET 2017, account=com.example.bookstore.domain.Account#1}
2017-11-11 11:00:57.241 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Order{billingSameAsShipping=true, orderDetails=[com.example.bookstore.domain.OrderDetail#3], shippingAddress=null, id=3, billingAddress=null, totalOrderPrice=33.32, deliveryDate=Sat Nov 11 11:00:57 CET 2017, orderDate=Sat Nov 11 11:00:57 CET 2017, account=com.example.bookstore.domain.Account#1}
2017-11-11 11:00:57.241 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.OrderDetail{quantity=1, book=com.example.bookstore.domain.Book#3, id=3}
2017-11-11 11:00:57.242 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Order{billingSameAsShipping=true, orderDetails=[com.example.bookstore.domain.OrderDetail#4, com.example.bookstore.domain.OrderDetail#5], shippingAddress=null, id=4, billingAddress=null, totalOrderPrice=110.62, deliveryDate=Sat Nov 11 11:00:57 CET 2017, orderDate=Sat Nov 11 11:00:57 CET 2017, account=com.example.bookstore.domain.Account#1}
2017-11-11 11:00:57.242 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9781430209737, year=2008, author=Jaroslav Tulach, price=56.01, description=The definitive guide to API design, this book will be required reading for all designers and engineers involved with the development, testing, and maintenance of APIs., id=5, category=com.example.bookstore.domain.Category#1, title=Practical API Design: Confessions of a Java Framework Architect}
2017-11-11 11:00:57.242 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.OrderDetail{quantity=1, book=com.example.bookstore.domain.Book#4, id=4}
2017-11-11 11:00:57.242 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780135974445, year=2002, author=Robert C. Martin, price=54.61, description=A unique collection of the latest software development methods. Includes OOD, UML, Design Patterns, Agile and XP methods with a detailed description of a complete software design for reusable programs in C++ and Java., id=4, category=com.example.bookstore.domain.Category#1, title=Agile Software Development, Principles, Patterns, and Practices}
2017-11-11 11:00:57.242 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.OrderDetail{quantity=1, book=com.example.bookstore.domain.Book#5, id=5}
2017-11-11 11:00:57.243 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780132350884, year=2008, author=Robert C. Martin, price=33.32, description=Even bad code can function. But if code isn't clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesn't have to be that way., id=3, category=com.example.bookstore.domain.Category#1, title=Clean Code: A Handbook of Agile Software Craftsmanship}
2017-11-11 11:00:57.243 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Account{firstName=Some, lastName=Author, emailAddress=baz@test.com, password=3113da6bea220e356ec99f7638951503fd722914fc7250db85881aaf404b4715, address=component[boxNumber,city,country,houseNumber,postalCode,street]{country=BE, city=Gent, street=Abdijlaan, postalCode=9000, houseNumber=1, boxNumber=A}, roles=[com.example.bookstore.domain.Role#3], dateOfBirth=null, id=3, username=author}
2017-11-11 11:00:57.244 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:118)ogger{36} - More......
2017-11-11 11:00:57.244 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Account.roles#1]
2017-11-11 11:00:57.257 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account_Role (Account_id, roles_id) values (?, ?)
2017-11-11 11:00:57.258 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.258 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account_Role], timestamp: 6186575942688768
2017-11-11 11:00:57.258 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account_Role value: 6186575942688768
2017-11-11 11:00:57.259 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Role.permissions#1]
2017-11-11 11:00:57.259 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role_Permission (Role_id, permissions_id) values (?, ?)
2017-11-11 11:00:57.260 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.260 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role_Permission], timestamp: 6186575942696960
2017-11-11 11:00:57.260 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role_Permission value: 6186575942696960
2017-11-11 11:00:57.261 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Account.roles#2]
2017-11-11 11:00:57.261 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account_Role (Account_id, roles_id) values (?, ?)
2017-11-11 11:00:57.261 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.262 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account_Role], timestamp: 6186575942705152
2017-11-11 11:00:57.262 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account_Role value: 6186575942705152
2017-11-11 11:00:57.262 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Role.permissions#2]
2017-11-11 11:00:57.262 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role_Permission (Role_id, permissions_id) values (?, ?)
2017-11-11 11:00:57.263 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role_Permission (Role_id, permissions_id) values (?, ?)
2017-11-11 11:00:57.264 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 2 rows inserted
2017-11-11 11:00:57.264 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role_Permission], timestamp: 6186575942713344
2017-11-11 11:00:57.264 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role_Permission value: 6186575942713344
2017-11-11 11:00:57.264 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Account.roles#3]
2017-11-11 11:00:57.265 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Account_Role (Account_id, roles_id) values (?, ?)
2017-11-11 11:00:57.265 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.265 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Account_Role], timestamp: 6186575942717440
2017-11-11 11:00:57.266 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account_Role value: 6186575942717440
2017-11-11 11:00:57.266 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Role.permissions#3]
2017-11-11 11:00:57.266 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Role_Permission (Role_id, permissions_id) values (?, ?)
2017-11-11 11:00:57.267 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.267 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Role_Permission], timestamp: 6186575942725632
2017-11-11 11:00:57.267 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role_Permission value: 6186575942725632
2017-11-11 11:00:57.267 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Order.orderDetails#1]
2017-11-11 11:00:57.268 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - update OrderDetail set order_id=? where id=?
2017-11-11 11:00:57.270 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.270 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942737920
2017-11-11 11:00:57.270 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942737920
2017-11-11 11:00:57.270 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Order.orderDetails#2]
2017-11-11 11:00:57.271 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - update OrderDetail set order_id=? where id=?
2017-11-11 11:00:57.271 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.271 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942742016
2017-11-11 11:00:57.272 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942742016
2017-11-11 11:00:57.272 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Order.orderDetails#3]
2017-11-11 11:00:57.272 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - update OrderDetail set order_id=? where id=?
2017-11-11 11:00:57.273 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 1 rows inserted
2017-11-11 11:00:57.273 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942750208
2017-11-11 11:00:57.273 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942750208
2017-11-11 11:00:57.273 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1205)ogger{36} - Inserting collection: [com.example.bookstore.domain.Order.orderDetails#4]
2017-11-11 11:00:57.273 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - update OrderDetail set order_id=? where id=?
2017-11-11 11:00:57.274 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - update OrderDetail set order_id=? where id=?
2017-11-11 11:00:57.275 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1288)ogger{36} - Done inserting collection: 2 rows inserted
2017-11-11 11:00:57.275 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [OrderDetail], timestamp: 6186575942758400
2017-11-11 11:00:57.275 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575942758400
2017-11-11 11:00:57.279 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113)ogger{36} - committed JDBC Connection
2017-11-11 11:00:57.280 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.282 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Role], timestamp: 6186575697022976
2017-11-11 11:00:57.282 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role value: 6186575697022976
2017-11-11 11:00:57.282 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [OrderDetail], timestamp: 6186575697022976
2017-11-11 11:00:57.282 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: OrderDetail value: 6186575697022976
2017-11-11 11:00:57.283 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Account], timestamp: 6186575697022976
2017-11-11 11:00:57.283 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account value: 6186575697022976
2017-11-11 11:00:57.283 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Account_Role], timestamp: 6186575697022976
2017-11-11 11:00:57.283 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Account_Role value: 6186575697022976
2017-11-11 11:00:57.284 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575697022976
2017-11-11 11:00:57.284 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575697022976
2017-11-11 11:00:57.284 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575697022976
2017-11-11 11:00:57.285 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575697022976
2017-11-11 11:00:57.285 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Permission], timestamp: 6186575697022976
2017-11-11 11:00:57.285 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Permission value: 6186575697022976
2017-11-11 11:00:57.285 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [orders], timestamp: 6186575697022976
2017-11-11 11:00:57.286 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: orders value: 6186575697022976
2017-11-11 11:00:57.286 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Role_Permission], timestamp: 6186575697022976
2017-11-11 11:00:57.286 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Role_Permission value: 6186575697022976
2017-11-11 11:00:57.287 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138)ogger{36} - HHH000420: Closing un-released batch
2017-11-11 11:00:57.287 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.287 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.288 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
2017-11-11 11:00:57.365 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:57.365 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:57.366 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:57.366 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:57.366 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
[main] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@7d199c68, testMethod = testStoreBook@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@35cd68d4]; rollback [true]
2017-11-11 11:00:57.371 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.371 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.372 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 4
2017-11-11 11:00:57.373 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943159808
2017-11-11 11:00:57.374 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943159808
2017-11-11 11:00:57.375 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.375 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.376 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 6
2017-11-11 11:00:57.376 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943172096
2017-11-11 11:00:57.376 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943172096
2017-11-11 11:00:57.378 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.378 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.378 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 7
2017-11-11 11:00:57.379 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943184384
2017-11-11 11:00:57.379 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943184384
2017-11-11 11:00:57.381 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.381 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=1234567890123, year=null, author=JohnDoe, price=null, description=Something, id=7, category=com.example.bookstore.domain.Category#4, title=John Doe's life}
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=6, category=com.example.bookstore.domain.Category#4, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.382 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=4}
2017-11-11 11:00:57.385 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203)ogger{36} - rolling back
2017-11-11 11:00:57.388 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164)ogger{36} - rolled JDBC Connection
2017-11-11 11:00:57.388 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.388 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575697461248
2017-11-11 11:00:57.388 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575697461248
2017-11-11 11:00:57.389 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575697461248
2017-11-11 11:00:57.389 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575697461248
2017-11-11 11:00:57.389 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.389 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.389 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
[main] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@7d199c68, testMethod = testStoreBook@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2017-11-11 11:00:57.396 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:57.397 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:57.397 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:57.398 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:57.398 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
[main] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@5853495b, testMethod = testFindRandom@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@35cd68d4]; rollback [true]
2017-11-11 11:00:57.399 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.399 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.400 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 5
2017-11-11 11:00:57.401 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943274496
2017-11-11 11:00:57.401 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943274496
2017-11-11 11:00:57.401 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.402 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.403 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 8
2017-11-11 11:00:57.403 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943282688
2017-11-11 11:00:57.403 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943282688
2017-11-11 11:00:57.404 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265)ogger{36} - parse() - HQL: select b from com.example.bookstore.domain.Book b order by rand()
2017-11-11 11:00:57.406 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283)ogger{36} - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'bookstore'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'b'
    \-[ORDER] Node: 'order'
       \-[METHOD_CALL] Node: '('
          +-[IDENT] Node: 'rand'
          \-[EXPR_LIST] Node: 'exprList'

2017-11-11 11:00:57.406 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.407 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121)ogger{36} - select << begin [level=1, statement=select]
2017-11-11 11:00:57.407 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157)ogger{36} - FromClause{level=1} : com.example.bookstore.domain.Book (b) -> book0_
2017-11-11 11:00:57.407 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : b -> book0_.id
2017-11-11 11:00:57.411 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125)ogger{36} - select : finishing up [level=1, statement=select]
2017-11-11 11:00:57.411 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:629)ogger{36} - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( order ( ( rand exprList ) ) )
2017-11-11 11:00:57.413 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175)ogger{36} - Using FROM fragment [Book book0_]
2017-11-11 11:00:57.414 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129)ogger{36} - select >> end [level=1, statement=select]
2017-11-11 11:00:57.414 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252)ogger{36} - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_' {alias=b, className=com.example.bookstore.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.example.bookstore.domain.Book}}
    \-[ORDER] OrderByClause: 'order'
       \-[METHOD_CALL] MethodNode: '('
          +-[METHOD_NAME] IdentNode: 'rand' {originalText=rand}
          \-[EXPR_LIST] SqlNode: 'exprList'

2017-11-11 11:00:57.414 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.415 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235)ogger{36} - HQL: select b from com.example.bookstore.domain.Book b order by rand()
2017-11-11 11:00:57.416 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236)ogger{36} - SQL: select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ order by rand()
2017-11-11 11:00:57.416 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.416 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.416 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.417 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-11-11 11:00:57.417 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-11-11 11:00:57.417 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.417 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=8, category=com.example.bookstore.domain.Category#5, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.417 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=5}
2017-11-11 11:00:57.418 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ order by rand()
2017-11-11 11:00:57.419 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 0
2017-11-11 11:00:57.419 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#2]
2017-11-11 11:00:57.424 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 1
2017-11-11 11:00:57.425 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#8]
2017-11-11 11:00:57.425 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 2
2017-11-11 11:00:57.425 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#4]
2017-11-11 11:00:57.426 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 3
2017-11-11 11:00:57.426 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#1]
2017-11-11 11:00:57.427 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 4
2017-11-11 11:00:57.427 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#5]
2017-11-11 11:00:57.428 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 5
2017-11-11 11:00:57.428 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#3]
2017-11-11 11:00:57.428 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Book#2]
2017-11-11 11:00:57.430 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2099)ogger{36} - Loading entity: [com.example.bookstore.domain.Category#1]
2017-11-11 11:00:57.430 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - select category0_.id as id4_0_, category0_.name as name4_0_ from Category category0_ where category0_.id=?
2017-11-11 11:00:57.431 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 0
2017-11-11 11:00:57.431 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Category#1]
2017-11-11 11:00:57.431 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Category#1]
2017-11-11 11:00:57.432 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Category#1]
2017-11-11 11:00:57.433 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Category#1]
2017-11-11 11:00:57.433 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2123)ogger{36} - Done entity load
2017-11-11 11:00:57.433 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Book#2]
2017-11-11 11:00:57.434 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Book#2]
2017-11-11 11:00:57.434 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Book#4]
2017-11-11 11:00:57.434 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Book#4]
2017-11-11 11:00:57.434 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Book#4]
2017-11-11 11:00:57.434 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Book#1]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Book#1]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Book#1]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Book#5]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Book#5]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Book#5]
2017-11-11 11:00:57.435 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:158)ogger{36} - Resolving associations for [com.example.bookstore.domain.Book#3]
2017-11-11 11:00:57.436 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:192)ogger{36} - Adding entity to second-level cache: [com.example.bookstore.domain.Book#3]
2017-11-11 11:00:57.436 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.doInitializeEntity(TwoPhaseLoad.java:284)ogger{36} - Done materializing entity [com.example.bookstore.domain.Book#3]
2017-11-11 11:00:57.436 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203)ogger{36} - rolling back
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164)ogger{36} - rolled JDBC Connection
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575697661952
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575697661952
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575697661952
2017-11-11 11:00:57.437 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575697661952
2017-11-11 11:00:57.438 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.438 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.438 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
[main] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@5853495b, testMethod = testFindRandom@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2017-11-11 11:00:57.440 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:57.440 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:57.441 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:57.441 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:57.441 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
[main] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@e8e0dec, testMethod = testFindById@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@35cd68d4]; rollback [true]
2017-11-11 11:00:57.441 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.442 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.443 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 6
2017-11-11 11:00:57.444 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943450624
2017-11-11 11:00:57.444 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943450624
2017-11-11 11:00:57.445 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.445 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.446 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 9
2017-11-11 11:00:57.447 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943458816
2017-11-11 11:00:57.447 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943458816
2017-11-11 11:00:57.447 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.447 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.448 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-11-11 11:00:57.448 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-11-11 11:00:57.448 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.448 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=9, category=com.example.bookstore.domain.Category#6, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.448 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=6}
2017-11-11 11:00:57.449 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203)ogger{36} - rolling back
2017-11-11 11:00:57.449 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164)ogger{36} - rolled JDBC Connection
2017-11-11 11:00:57.449 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.450 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575697715200
2017-11-11 11:00:57.450 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575697715200
2017-11-11 11:00:57.450 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575697715200
2017-11-11 11:00:57.450 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575697715200
2017-11-11 11:00:57.451 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.451 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.451 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
[main] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@e8e0dec, testMethod = testFindById@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2017-11-11 11:00:57.453 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:57.453 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:57.453 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:57.454 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:57.454 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
[main] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@1a6cf771, testMethod = testFindByCategory@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@35cd68d4]; rollback [true]
2017-11-11 11:00:57.454 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.455 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.455 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 7
2017-11-11 11:00:57.456 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943499776
2017-11-11 11:00:57.456 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943499776
2017-11-11 11:00:57.456 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.457 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.457 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 10
2017-11-11 11:00:57.458 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943507968
2017-11-11 11:00:57.458 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943507968
2017-11-11 11:00:57.458 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.458 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.459 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 8
2017-11-11 11:00:57.459 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943512064
2017-11-11 11:00:57.459 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943512064
2017-11-11 11:00:57.460 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.460 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.460 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 11
2017-11-11 11:00:57.461 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943520256
2017-11-11 11:00:57.461 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943520256
2017-11-11 11:00:57.461 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265)ogger{36} - parse() - HQL: select b from com.example.bookstore.domain.Book b where b.category=:category
2017-11-11 11:00:57.464 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283)ogger{36} - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'bookstore'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'category'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'category'

2017-11-11 11:00:57.464 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.464 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121)ogger{36} - select << begin [level=1, statement=select]
2017-11-11 11:00:57.465 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157)ogger{36} - FromClause{level=1} : com.example.bookstore.domain.Book (b) -> book0_
2017-11-11 11:00:57.465 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : b -> book0_.id
2017-11-11 11:00:57.467 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : b -> book0_.id
2017-11-11 11:00:57.467 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599)ogger{36} - getDataType() : category -> org.hibernate.type.ManyToOneType(com.example.bookstore.domain.Category)
2017-11-11 11:00:57.468 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:562)ogger{36} - dereferenceShortcut() : property category in com.example.bookstore.domain.Book does not require a join.
2017-11-11 11:00:57.468 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:588)ogger{36} - Terminal propertyPath = [category]
2017-11-11 11:00:57.468 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : b.category -> book0_.category_id
2017-11-11 11:00:57.470 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125)ogger{36} - select : finishing up [level=1, statement=select]
2017-11-11 11:00:57.470 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:629)ogger{36} - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( = ( book0_.category_id book0_.id category ) ? ) ) )
2017-11-11 11:00:57.470 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175)ogger{36} - Using FROM fragment [Book book0_]
2017-11-11 11:00:57.471 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129)ogger{36} - select >> end [level=1, statement=select]
2017-11-11 11:00:57.471 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252)ogger{36} - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_' {alias=b, className=com.example.bookstore.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.example.bookstore.domain.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.category_id' {propertyName=category,dereferenceType=0,propertyPath=category,path=b.category,tableAlias=book0_,className=com.example.bookstore.domain.Book,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=b, className=com.example.bookstore.domain.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'category' {originalText=category}
          \-[NAMED_PARAM] ParameterNode: '?' {name=category, expectedType=org.hibernate.type.ManyToOneType(com.example.bookstore.domain.Category)}

2017-11-11 11:00:57.471 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.472 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235)ogger{36} - HQL: select b from com.example.bookstore.domain.Book b where b.category=:category
2017-11-11 11:00:57.472 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236)ogger{36} - SQL: select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ where book0_.category_id=?
2017-11-11 11:00:57.472 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.475 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.475 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.475 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2017-11-11 11:00:57.476 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-11-11 11:00:57.476 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.476 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=10, category=com.example.bookstore.domain.Category#7, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.476 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=8}
2017-11-11 11:00:57.476 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=7}
2017-11-11 11:00:57.477 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=11, category=com.example.bookstore.domain.Category#8, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.478 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ where book0_.category_id=?
2017-11-11 11:00:57.478 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 0
2017-11-11 11:00:57.479 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#11]
2017-11-11 11:00:57.479 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203)ogger{36} - rolling back
2017-11-11 11:00:57.480 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164)ogger{36} - rolled JDBC Connection
2017-11-11 11:00:57.480 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.480 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575697838080
2017-11-11 11:00:57.480 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575697838080
2017-11-11 11:00:57.480 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575697838080
2017-11-11 11:00:57.481 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575697838080
2017-11-11 11:00:57.481 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.481 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.481 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
[main] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@1a6cf771, testMethod = testFindByCategory@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2017-11-11 11:00:57.483 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158)ogger{36} - begin
2017-11-11 11:00:57.483 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295)ogger{36} - Obtaining JDBC connection
2017-11-11 11:00:57.484 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301)ogger{36} - Obtained JDBC connection
2017-11-11 11:00:57.484 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69)ogger{36} - initial autocommit status: true
2017-11-11 11:00:57.484 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71)ogger{36} - disabling autocommit
[main] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@36061cf3, testMethod = testFindBooks@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@35cd68d4]; rollback [true]
2017-11-11 11:00:57.484 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.485 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Category (id, name) values (null, ?)
2017-11-11 11:00:57.486 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 9
2017-11-11 11:00:57.486 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Category], timestamp: 6186575943622656
2017-11-11 11:00:57.486 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575943622656
2017-11-11 11:00:57.487 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202)ogger{36} - Executing identity-insert immediately
2017-11-11 11:00:57.487 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - insert into Book (id, Isbn, author, category_id, description, price, title, year) values (null, ?, ?, ?, ?, ?, ?, ?)
2017-11-11 11:00:57.488 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93)ogger{36} - Natively generated identity: 12
2017-11-11 11:00:57.488 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.preinvalidate(UpdateTimestampsCache.java:79)ogger{36} - Pre-invalidating space [Book], timestamp: 6186575943630848
2017-11-11 11:00:57.488 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575943630848
2017-11-11 11:00:57.518 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:219)ogger{36} - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where upper(generatedAlias0.title) like :param0 order by generatedAlias0.title asc
2017-11-11 11:00:57.519 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265)ogger{36} - parse() - HQL: select generatedAlias0 from com.example.bookstore.domain.Book as generatedAlias0 where upper(generatedAlias0.title) like :param0 order by generatedAlias0.title asc
2017-11-11 11:00:57.522 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283)ogger{36} - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'bookstore'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias0'
    |     |        \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'title'
       \-[ASCENDING] Node: 'asc'

2017-11-11 11:00:57.522 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.523 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121)ogger{36} - select << begin [level=1, statement=select]
2017-11-11 11:00:57.523 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157)ogger{36} - FromClause{level=1} : com.example.bookstore.domain.Book (generatedAlias0) -> book0_
2017-11-11 11:00:57.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : generatedAlias0 -> book0_.id
2017-11-11 11:00:57.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : generatedAlias0 -> book0_.id
2017-11-11 11:00:57.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599)ogger{36} - getDataType() : title -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:57.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : generatedAlias0.title -> book0_.title
2017-11-11 11:00:57.525 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : generatedAlias0 -> book0_.id
2017-11-11 11:00:57.525 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599)ogger{36} - getDataType() : title -> org.hibernate.type.StringType@67d18ed7
2017-11-11 11:00:57.525 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74)ogger{36} - Resolved : generatedAlias0.title -> book0_.title
2017-11-11 11:00:57.525 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125)ogger{36} - select : finishing up [level=1, statement=select]
2017-11-11 11:00:57.526 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:629)ogger{36} - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} Book book0_ ) ( where ( like ( ( upper ( exprList ( book0_.title book0_.id title ) ) ) ? ) ) ( order ( book0_.title book0_.id title ) asc ) )
2017-11-11 11:00:57.526 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175)ogger{36} - Using FROM fragment [Book book0_]
2017-11-11 11:00:57.526 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129)ogger{36} - select >> end [level=1, statement=select]
2017-11-11 11:00:57.527 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252)ogger{36} - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_' {alias=generatedAlias0, className=com.example.bookstore.domain.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.example.bookstore.domain.Book}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=com.example.bookstore.domain.Book,classAlias=generatedAlias0}
    |     |        +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=com.example.bookstore.domain.Book, tableAlias=book0_}
    |     |        \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@67d18ed7}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=com.example.bookstore.domain.Book,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=com.example.bookstore.domain.Book, tableAlias=book0_}
       |  \-[IDENT] IdentNode: 'title' {originalText=title}
       \-[ASCENDING] SqlNode: 'asc'

2017-11-11 11:00:57.527 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.527 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235)ogger{36} - HQL: select generatedAlias0 from com.example.bookstore.domain.Book as generatedAlias0 where upper(generatedAlias0.title) like :param0 order by generatedAlias0.title asc
2017-11-11 11:00:57.528 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236)ogger{36} - SQL: select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ where upper(book0_.title) like ? order by book0_.title asc
2017-11-11 11:00:57.528 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82)ogger{36} - throwQueryException() : no errors
2017-11-11 11:00:57.531 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143)ogger{36} - Processing flush-time cascades
2017-11-11 11:00:57.531 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183)ogger{36} - Dirty checking collections
2017-11-11 11:00:57.531 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117)ogger{36} - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-11-11 11:00:57.531 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124)ogger{36} - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-11-11 11:00:57.532 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114)ogger{36} - Listing entities:
2017-11-11 11:00:57.532 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Category{name=Evolution, id=9}
2017-11-11 11:00:57.532 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121)ogger{36} - com.example.bookstore.domain.Book{Isbn=9780199291151, year=null, author=Richard Dawkins, price=null, description=Richard Dawkins' brilliant reformulation of the theory of natural selection, id=12, category=com.example.bookstore.domain.Category#9, title=The Selfish Gene: 30th Anniversary Edition}
2017-11-11 11:00:57.533 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104)ogger{36} - select book0_.id as id1_, book0_.Isbn as Isbn1_, book0_.author as author1_, book0_.category_id as category8_1_, book0_.description as descript4_1_, book0_.price as price1_, book0_.title as title1_, book0_.year as year1_ from Book book0_ where upper(book0_.title) like ? order by book0_.title asc
2017-11-11 11:00:57.533 [main] DEBUG org.hibernate.loader.Loader.processResultSet(Loader.java:939)ogger{36} - Result set row: 0
2017-11-11 11:00:57.534 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1471)ogger{36} - Result row: EntityKey[com.example.bookstore.domain.Book#12]
2017-11-11 11:00:57.534 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203)ogger{36} - rolling back
2017-11-11 11:00:57.534 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164)ogger{36} - rolled JDBC Connection
2017-11-11 11:00:57.534 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126)ogger{36} - re-enabling autocommit
2017-11-11 11:00:57.535 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Category], timestamp: 6186575698063360
2017-11-11 11:00:57.535 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Category value: 6186575698063360
2017-11-11 11:00:57.535 [main] DEBUG org.hibernate.cache.spi.UpdateTimestampsCache.invalidate(UpdateTimestampsCache.java:99)ogger{36} - Invalidating space [Book], timestamp: 6186575698063360
2017-11-11 11:00:57.535 [main] DEBUG org.hibernate.cache.ehcache.internal.regions.EhcacheGeneralDataRegion.put(EhcacheGeneralDataRegion.java:100)ogger{36} - key: Book value: 6186575698063360
2017-11-11 11:00:57.535 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314)ogger{36} - Releasing JDBC connection
2017-11-11 11:00:57.536 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332)ogger{36} - Released JDBC connection
2017-11-11 11:00:57.536 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219)ogger{36} - HHH000163: Logical connection releasing its physical connection
[main] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2184b4f4 testClass = JpaBookRepositoryTest, testInstance = com.example.bookstore.repository.JpaBookRepositoryTest@36061cf3, testMethod = testFindBooks@JpaBookRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63411512 testClass = JpaBookRepositoryTest, locations = '{}', classes = '{class com.example.bookstore.config.InfrastructureContextConfiguration, class com.example.bookstore.config.TestDataContextConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.398 sec
Running com.example.bookstore.service.AccountServiceTest
[main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.bookstore.service.AccountServiceTest]: no resource found for suffixes {-context.xml}.
[main] INFO org.springframework.test.context.support.AbstractDelegatingSmartContextLoader - AnnotationConfigContextLoader detected default configuration classes for context configuration [ContextConfigurationAttributes@6a937336 declaringClass = 'com.example.bookstore.service.AccountServiceTest', classes = '{class com.example.bookstore.service.AccountServiceTest$AccountServiceTestContextConfiguration}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3f4f5330, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@14b7786, org.springframework.test.context.support.DirtiesContextTestExecutionListener@750ff7d3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63b3ee82, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2620e717]
[main] INFO org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@7c8d5312: startup date [Sat Nov 11 11:00:57 CET 2017]; root of context hierarchy
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.182 sec
Running com.example.bookstore.web.controller.LoginControllerTest
[main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.bookstore.web.controller.LoginControllerTest]: no resource found for suffixes {-context.xml}.
[main] INFO org.springframework.test.context.support.AbstractDelegatingSmartContextLoader - AnnotationConfigContextLoader detected default configuration classes for context configuration [ContextConfigurationAttributes@784abd3e declaringClass = 'com.example.bookstore.web.controller.LoginControllerTest', classes = '{class com.example.bookstore.web.controller.LoginControllerTest$LoginControllerTestConfiguration}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5484117b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37df14d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7efb53af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7724704f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3dfa819]
[main] INFO org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@4ce94d2f: startup date [Sat Nov 11 11:00:57 CET 2017]; root of context hierarchy
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
[Thread-3] INFO org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@551aa95a: startup date [Sat Nov 11 11:00:53 CET 2017]; root of context hierarchy
[Thread-5] INFO org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@4ce94d2f: startup date [Sat Nov 11 11:00:57 CET 2017]; root of context hierarchy
[Thread-4] INFO org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@7c8d5312: startup date [Sat Nov 11 11:00:57 CET 2017]; root of context hierarchy
[Thread-3] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'bookstore'
2017-11-11 11:00:57.787 [Thread-3] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1357)ogger{36} - HHH000031: Closing
2017-11-11 11:00:57.789 [Thread-3] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:108)ogger{36} - Remove: name=bookstore

Results :

Tests run: 11, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13.303 s
[INFO] Finished at: 2017-11-11T11:00:58+01:00
[INFO] Final Memory: 25M/280M
[INFO] ------------------------------------------------------------------------
